---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

includes:
  ansible: .taskfiles/AnsibleTasks.yaml
  bootstrap: .taskfiles/BootstrapTasks.yaml
  brew: .taskfiles/BrewTasks.yaml
  cluster:
    taskfile: .taskfiles/ClusterTasks.yaml
    aliases: ["flux"]
  db: .taskfiles/DBTasks.yaml
  kubernetes:
    taskfile: .taskfiles/KubernetesTasks.yaml
    aliases: ["k8s"]
  precommit:
    taskfile: .taskfiles/PrecommitTasks.yaml
    aliases: ["pc"]
  rook:
    taskfile: .taskfiles/RookTasks.yaml
    aliases: ["ceph"]
  volsync: .taskfiles/VolsyncTasks.yaml

dotenv: [".env"]

vars:
  PYTHON_BIN: python3
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  ANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  # equivalent to 'ROOT_DIR'
  # PROJECT_DIR:
  #   sh: "git rev-parse --show-toplevel"

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"
  SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/age.key"
  # PATH: "{{.ROOT_DIR}}/.venv/bin:$PATH"
  # VIRTUAL_ENV: "{{.ROOT_DIR}}/.venv"
  # ANSIBLE_COLLECTIONS_PATH: "{{.ROOT_DIR}}/.venv/galaxy"
  # ANSIBLE_ROLES_PATH: "{{.ROOT_DIR}}/.venv/galaxy/ansible_roles"
  # ANSIBLE_VARS_ENABLED: "host_group_vars,community.sops.sops"
  K8S_AUTH_KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"

tasks:
  default: task -l

  check:
    desc: Lint and Format with precommit
    cmd: pre-commit run --all-files

  sops:
    desc: Substitute and encrypt sops secret, given tmpl
    cmds:
      - |
        unset noclobber
        envsubst < {{.CLI_ARGS}} > {{.CLI_ARGS | replace ".tmpl" ""}}
        sops --encrypt --in-place {{.CLI_ARGS | replace ".tmpl" ""}}

  update-template:
    desc: Update from the upstream flux-cluster-template repository
    summary: task {{.TASK}}
    cmds:
      - mkdir -p $(dirname {{.shafile}})
      - touch {{.shafile}}
      - git remote get-url template >/dev/null 2>&1 || git remote add template git@github.com:onedr0p/flux-cluster-template
      - git fetch --all
      - git cherry-pick --no-commit --allow-empty $(cat {{.shafile}})..template/main
      - git ls-remote template HEAD | awk '{ print $1}' > {{.shafile}}
    vars:
      shafile: "{{.ROOT_DIR}}/bootstrap/.latest-template.sha"
    preconditions:
      - { msg: "Git repository not up-to-date", sh: "git diff --exit-code" }
      - { msg: "Git repository not up-to-date", sh: "git diff --cached --exit-code" }
