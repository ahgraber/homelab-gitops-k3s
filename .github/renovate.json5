{
  // General RenovateBot configuration
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    // "github>ahgraber/homelab-gitops-k3s//.github/renovate/allowedVersions.json5",
    "github>ahgraber/homelab-gitops-k3s//.github/renovate/autoMerge.json5",
    "github>ahgraber/homelab-gitops-k3s//.github/renovate/commitMessage.json5",
    "github>ahgraber/homelab-gitops-k3s//.github/renovate/groups.json5",
    "github>ahgraber/homelab-gitops-k3s//.github/renovate/labels.json5",
    "github>ahgraber/homelab-gitops-k3s//.github/renovate/semanticCommits.json5",
  ],
  "timezone": "America/New_York",
  "platform": "github",
  "username": "UnhesitatingEffectiveBot[bot]",
  "repositories": ["ahgraber/homelab-gitops-k3s"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "rosey-bot <218594+UnhesitatingEffectiveBot[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  // set up ignored deps
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller",
  ],
  // set up Renovate Managers
  "pre-commit": {
    enabled: true,
  },
  "docker-compose": {
    fileMatch: ["(^|/)docker-compose.*.ya?ml$"],
  },
  "flux": {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  "kubernetes": {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  "regexManagers": [
    // regexManager to read and process HelmRelease files
    {
      description: "Process CRD dependencies",
      fileMatch: ["cluster/crds/.+\\.ya?ml$"],
      matchStrings: [
        // GitRepository where 'Git release/tag' matches 'Helm' version
        "# renovate: registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "# renovate: datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n",
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}",
    },
    {
      description: "Process various dependencies",
      fileMatch: ["cluster/.+\\.ya?ml$"],
      matchStrings: ['datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n'],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
    {
      description: "Process raw GitHub URLs",
      fileMatch: ["cluster/.+\\.ya?ml$"],
      matchStrings: ["https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"],
      datasourceTemplate: "github-releases",
      versioningTemplate: "semver",
    },
  ],
  "packageRules": [
    // setup datasources
    {
      matchDatasources: ["helm"],
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    {
      matchDatasources: ["docker"],
      enabled: true,
      commitMessageTopic: "container image {{depName}}",
      commitMessageExtra: "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      matchUpdateTypes: ["major", "minor", "patch"],
    },
  ],
}
