---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: democratic-csi-nfs
  namespace: democratic-csi
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://democratic-csi.github.io/charts/
      chart: democratic-csi
      version: 0.13.1
      sourceRef:
        kind: HelmRepository
        name: democratic-csi-charts
        namespace: flux-system
  values:
    csiDriver:
      name: "org.democratic-csi.truenas-nfs"
      installCRD: false

    driver:
      # see the driver-config-secret.yaml template for syntax
      existingConfigSecret: secret-democratic-csi-driver-config-nfs
      config:
        ## NOTE: if setting an existing secret you must still set `driver.config.driver`
        ## to the appropriate (equivalent) 'driver' value used in the secret,
        ## as the value is used by the chart for other purposes beyond secret creation
        driver: freenas-api-nfs

    controller:
      enabled: true
      hostNetwork: true # set false if fails
      hostIPC: true # set false if fails
      podAnnotations:
        secret.reloader.stakater.com/reload: "secret-democratic-csi-driver-config-nfs"
      strategy: deployment
      externalAttacher:
        enabled: true
      externalProvisioner:
        enabled: true
      externalResizer:
        enabled: true
      external Snapshotter:
        enabled: true
      externalHealthMonitorController:
        enabled: false
      livenessProbe:
        enabled: true
      driver:
        image: docker.io/democraticcsi/democratic-csi:latest
        logLevel: info
        # ### for the controller, manually mount from the remote NFS server on start,
        # ### so it can dynamically create PVC (the "crude" part)
        # ### ref: https://gist.github.com/admun/4372899f20421a947b7544e5fc9f9117
        # lifecycle:
        #   postStart:
        #     exec:
        #       command: ["/bin/sh", "-c", "mkdir -p /mnt/nfs; mount ${SECRET_TRUENAS_IP}:/mnt/ssdpool/csi/nfs/v /mnt/nfs"]
        #   preStop:
        #     exec:
        #       command: ["/bin/sh","-c","umount /mnt/nfs"]
        resources:
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
              - SYS_ADMIN
          privileged: true

      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          # effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists

    node:
      enabled: true
      rbac:
        enabled: true
      hostNetwork: true
      hostIPC: true
      kubeletHostPath: /var/lib/kubelet
      podAnnotations:
        secret.reloader.stakater.com/reload: "secret-democratic-csi-driver-config-nfs"
      livenessProbe:
        enabled: true
      mount:
        # should fsck be executed before mounting the fs
        checkFilesystem:
          xfs:
            enabled: true
          ext4:
            enabled: true

      driver:
        image: docker.io/democraticcsi/democratic-csi:latest
        logLevel: info

      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          # effect: NoSchedule

    storageClasses:
      - name: csi-truenas-nfs
        defaultClass: false
        reclaimPolicy: Delete # Delete, Retain
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          fsType: nfs
        mountOptions:
          - noatime
          - nfsvers=4
          - sec=sys

    volumeSnapshotClasses:
      - name: csi-truenas-nfs
        deletionPolicy: Delete # Delete, Retain
        annotations:
          velero.io/csi-volumesnapshot-class: "true"
        labels:
          velero.io/csi-volumesnapshot-class: "true"
