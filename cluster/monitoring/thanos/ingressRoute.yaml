---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-thanos-bucketweb
  namespace: networking
spec:
  entryPoints:
    # - web
    - websecure
  routes:
    - match: Host(`thanos-bucketweb.${SECRET_DOMAIN}`)
      kind: Rule
      # Enable auth middleware
      middlewares:
        - name: rfc1918
        # - name: basicauth
      services:
        - name: thanos-bucketweb
          namespace: monitoring
          port: 8080
  # Use the secret generated by cert-manager
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
    # secretName: '${SECRET_DOMAIN/./-}-stage-tls'
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-thanos-compactor
  namespace: networking
spec:
  entryPoints:
    # - web
    - websecure
  routes:
    - match: Host(`thanos-compactor.${SECRET_DOMAIN}`)
      kind: Rule
      # Enable auth middleware
      middlewares:
        - name: rfc1918
        # - name: basicauth
      services:
        - name: thanos-compactor
          namespace: monitoring
          port: 9090
  # Use the secret generated by cert-manager
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
    # secretName: '${SECRET_DOMAIN/./-}-stage-tls'
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-thanos-query
  namespace: networking
spec:
  entryPoints:
    # - web
    - websecure
  routes:
    - match: Host(`thanos-query.${SECRET_DOMAIN}`)
      kind: Rule
      # Enable auth middleware
      middlewares:
        - name: rfc1918
        # - name: basicauth
      services:
        - name: thanos-query
          namespace: monitoring
          port: 9090
  # Use the secret generated by cert-manager
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
    # secretName: '${SECRET_DOMAIN/./-}-stage-tls'
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-thanos-ruler
  namespace: networking
spec:
  entryPoints:
    # - web
    - websecure
  routes:
    - match: Host(`thanos-ruler.${SECRET_DOMAIN}`)
      kind: Rule
      # Enable auth middleware
      middlewares:
        - name: rfc1918
        # - name: basicauth
      services:
        - name: thanos-ruler
          namespace: monitoring
          port: 9090
  # Use the secret generated by cert-manager
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
    # secretName: '${SECRET_DOMAIN/./-}-stage-tls'
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: route-thanos-storegateway
  namespace: networking
spec:
  entryPoints:
    # - web
    - websecure
  routes:
    - match: Host(`thanos-storegateway.${SECRET_DOMAIN}`)
      kind: Rule
      # Enable auth middleware
      middlewares:
        - name: rfc1918
        # - name: basicauth
      services:
        - name: thanos-storegateway
          namespace: monitoring
          port: 9090
  # Use the secret generated by cert-manager
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
    # secretName: '${SECRET_DOMAIN/./-}-stage-tls'
