---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: postgresql-ha
  namespace: postgresql
spec:
  interval: 10m
  timeout: 10m  # extended period because of lengthy startup
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: postgresql-ha
      version: 7.9.2
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  values:

    postgresqlImage:
      debug: true

    postgresql:
      replicaCount: 3

    global:
      postgresql:
        # username: postgres
        # password: ${DB_ROOT_PWD}
        # postgresPassword: ${DB_ROOT_PWD}
        # repmgrUsername: repmgr
        # repmgrPassword: ${DB_ROOT_PWD}
        existingSecret: "secret-postgresql-ha"
      pgpool:
        # adminUsername: admin
        # adminPassword: ${DB_ROOT_PWD}
        existingSecret: "secret-postgresql-ha"

      # username: postgres
      # password: ${DB_ROOT_PWD}
      # postgresPassword: ${DB_ROOT_PWD}
      # repmgrUsername: repmgr
      # repmgrPassword: ${DB_ROOT_PWD}
      # ## NOTE: When it's set the other auth/password parameters are ignored.
      # ## Use existing secret (ignores postgresqlUsername, postgresqlPassword, and replication.password)
      # existingSecret: "secret-postgresql-ha"

      # configurationCM: ""
      initdbScriptsCM: "configmap-postgresql-ha-init"

    pgpool:
      adminUsername: admin
      adminPassword: ${DB_USER_PWD}
      # usernames: pgpool
      # passwords: ${DB_USER_PWD}

    service:
      ## Kubernetes service type and port number
      type: ClusterIP
      port: 5432

    persistence:
      enabled: true
      storageClass: "csi-truenas-iscsi"
      size: 8Gi

    ## An array to add extra environment variables
    extraEnvVars:
      - name: TZ
        value: "America/New_York"

    ## MariaDB Galera containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    livenessProbe:
      enabled: true
      ## Once the startup probe has succeeded once, the liveness probe takes over
      initialDelaySeconds: 60 # 120
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      ## Initializing the database could take some time
      enabled: true
      initialDelaySeconds: 180 # 30
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    startupProbe:
      enabled: true
      ## Initializing the database could take some time
      # This allows 200 s delay (120s + 8*10s)
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 8
