---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: velero
  namespace: velero
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://vmware-tanzu.github.io/helm-charts
      chart: velero
      version: 2.23.8
      sourceRef:
        kind: HelmRepository
        name: vmware-tanzu-charts
        namespace: flux-system
      interval: 5m
  # install:
  #   crds: Create
  # upgrade:
  #   crds: CreateReplace
  values:
    image:
      repository: velero/velero
      tag: v1.6.3

    initContainers:
      - name: velero-plugin-for-aws
        image: velero/velero-plugin-for-aws:v1.2.1
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
      - name: velero-plugin-for-csi
        image: velero/velero-plugin-for-csi:v0.1.2
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    upgradeCRDs: true

    # WARNING -- This job is meant primarily for cleaning up CRDs on CI systems.
    # Using this on production systems, especially those that have multiple releases of Velero, will be destructive.
    cleanUpCRDs: false

    configuration:
      # use AWS S3 interface
      provider: aws
      backupStorageLocation:
        name: default
        provider: aws
        bucket: 4596a1d327d9f1fd74bc061b
        # # prefix is the directory under which all Velero data should be stored within the bucket. Optional.
        # prefix:
        # default indicates this location is the default backup storage location. Optional.
        default: true
        config:
          region: us-west-002
          s3ForcePathStyle: true
          # kmsKeyId:
          # resourceGroup:
          # The ID of the subscription containing the storage account, if different from the cluster’s subscription. (Azure only)
          # subscriptionId:
          # storageAccount:
          s3Url: https://s3.us-west-002.backblazeb2.com
          publicUrl: https://s3.us-west-002.backblazeb2.com
          # publicUrl: https://s3.${SECRET_DOMAIN}

      volumeSnapshotLocation:
        name: velero
        provider: csi
        # config:
        #   region: us-west-002
        #   apiTimeout:
        #   resourceGroup:
        #   The ID of the subscription where volume snapshots should be stored, if different from the cluster’s subscription. If specified, also requires `configuration.volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
        #   subscriptionId:
        #   incremental:
        #   snapshotLocation:
        #   project:

      # # These are server-level settings passed as CLI flags to the `velero server` command. Velero
      # # uses default values if they're not passed in, so they only need to be explicitly specified
      # # here if using a non-default value. The `velero server` default values are shown in the
      # # comments below.
      # # --------------------
      # # `velero server` default: 1m
      # backupSyncPeriod:
      # # `velero server` default: 1h
      # resticTimeout:
      # # `velero server` default: namespaces,persistentvolumes,persistentvolumeclaims,secrets,configmaps,serviceaccounts,limitranges,pods
      # restoreResourcePriorities:
      # # `velero server` default: false
      # restoreOnlyMode:
      # # `velero server` default: 20.0
      # clientQPS:
      # # `velero server` default: 30
      # clientBurst:
      # # `velero server` default: empty
      # disableControllers:
      # #

      # # resticTimeout: 6h

      features: EnableCSI

    credentials:
      useSecret: true
      existingSecret: secret-velero

    # Whether to create backupstoragelocation crd, if false => do not create a default backup location
    backupsEnabled: true
    # Whether to create volumesnapshotlocation crd, if false => disable snapshot feature
    snapshotsEnabled: true

    # deployRestic: true
    # restic:
    #   podVolumePath: /var/lib/kubelet/pods
    #   privileged: false
    #   tolerations:
    #     - key: "node-role.kubernetes.io/master"
    #       operator: "Exists"

    schedules:
      daily-backup:
        schedule: "0 5 * * *"
        template:
          ttl: "120h"
      hourly-mariadb:
        schedule: "0 * * * *"
        template:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mariadb
          ttl: "120h"
          includedNamespaces:
            - mariadb
      hourly-postgresql:
        schedule: "0 * * * *"
        template:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql
          ttl: "120h"
          includedNamespaces:
            - postgresql
