---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mariadb
  namespace: mariadb
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      # chart: mariadb
      chart: mariadb
      version: 9.3.13
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  values:
    ## MariaDB architecture. Allowed values: standalone or replication
    # architecture: standalone
    architecture: replication

    ## MariaDB Authentication parameters
    auth:
      ## NOTE: When it's set the other auth/password parameters are ignored.
      ## Use existing secret (ignores rootUser.password, db.password, and galera.mariabackup.password)
      existingSecret: mariadb-secret

    ## Role Based Access
    ## ref: https://kubernetes.io/docs/admin/authorization/rbac/
    rbac:
      ## Specifies whether RBAC rules should be created
      create: false

    ## Init containers parameters:
    ## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
    volumePermissions:
      enabled: false

    ## Mariadb Primary parameters
    primary:
      ## MariaDB Primary Service parameters
      service:
        ## Kubernetes service type and port number
        type: ClusterIP
        port: 3306

        ## An array to add extra environment variables on MariaDB primary containers
        extraEnvVars:
          - name: TZ
            value: "America/New_York"
          - name: BITNAMI_DEBUG
            value: "true"

      ## MariaDB primary Pod security context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      podSecurityContext:
        enabled: true
        fsGroup: 1001

      ## MariaDB primary container security context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      containerSecurityContext:
        enabled: true
        runAsUser: 1001

      ## Enable persistence using Persistent Volume Claims
      ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
      persistence:
        ## If true, use a Persistent Volume Claim, If false, use emptyDir
        enabled: true
        # ## Name of existing PVC to hold MariaDB Primary data
        # ## NOTE: When it's set the rest of persistence parameters are ignored
        # existingClaim: mariadb
        # ## Subdirectory of the volume to mount
        # subPath:
        ## Persistent Volume Storage Class
        storageClass: "csi-truenas-iscsi"
        # ## Persistent Volume Claim annotations
        # annotations: {}
        # ## Persistent Volume Access Mode
        # accessModes:
        #   - ReadWriteOnce
        ## Persistent Volume size
        size: 8Gi
        ## selector can be used to match an existing PersistentVolume
        ## selector:
        ##   matchLabels:
        ##     app: my-app
        selector: {}

      ## MariaDB primary container's liveness and readiness probes
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
      livenessProbe:
        enabled: true
        initialDelaySeconds: 120
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
        successThreshold: 1
      readinessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
        successThreshold: 1

    ## Mariadb Secondary parameters
    secondary:
      ## Number of Mariadb Secondary replicas to deploy
      replicaCount: 2

      ## MariaDB secondary Pod security context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      podSecurityContext:
        enabled: true
        fsGroup: 1001

      ## MariaDB secondary container security context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      containerSecurityContext:
        enabled: true
        runAsUser: 1001

      ## Enable persistence using Persistent Volume Claims
      ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
      persistence:
        ## If true, use a Persistent Volume Claim, If false, use emptyDir
        enabled: true
        # ## Name of existing PVC to hold MariaDB Primary data
        # ## NOTE: When it's set the rest of persistence parameters are ignored
        # existingClaim: mariadb
        # ## Subdirectory of the volume to mount
        # subPath:
        ## Persistent Volume Storage Class
        storageClass: "csi-truenas-iscsi"
        # ## Persistent Volume Claim annotations
        # annotations: {}
        # ## Persistent Volume Access Mode
        # accessModes:
        #   - ReadWriteOnce
        ## Persistent Volume size
        size: 8Gi
        ## selector can be used to match an existing PersistentVolume
        ## selector:
        ##   matchLabels:
        ##     app: my-app
        selector: {}
