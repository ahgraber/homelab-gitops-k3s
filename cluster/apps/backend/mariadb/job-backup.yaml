---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-mariadb-backup
  namespace: mariadb
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - "*"

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rbac-mariadb-backup
  namespace: mariadb
subjects:
  - kind: ServiceAccount
    name: sa-mariadb-backup
    namespace: mariadb
roleRef:
  kind: Role
  name: role-mariadb-backup
  apiGroup: ""

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-mariadb-backup
  namespace: mariadb

---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-mariadb-backup
  namespace: mariadb
spec:
  backoffLimit: 3  # retry only once
  template:
    spec:
      serviceAccountName: sa-mariadb-backup
      containers:
        - name: backup
          image: bitnami/kubectl:latest
          # image: ghcr.io/k8s-at-home/kubectl:v1.22.2
          env:
            - name: TZ
              value: "America/New_York"
            - name: SECRET_DB_ROOT_PWD
              # value: ${SECRET_DB_ROOT_PWD}
              valueFrom:
                secretKeyRef:
                  name: secret-mariadb
                  key: mariadb-root-password
          command:
            - "/bin/bash"
            - "-c"
            # - |
            #   kubectl exec mariadb-0 -n mariadb -- mysqldump --user=root --password=${SECRET_DB_ROOT_PWD} --all-databases > /mnt/backup/backup-$(date +"%Y-%b-%d_%H.%M").sql
            #   echo 'Backup process completed.'
            #   exit
            - |
              echo 'Making backup directories if they do not exist...'
              kubectl exec mariadb-0 -n mariadb -- mkdir -p /mnt/backup/{backup.d,incremental.d}
              echo 'Checking backup directory...'
              if [ -z "$(kubectl exec mariadb-0 -n mariadb -- ls -A /mnt/backup/backup.d)" ]; then
                echo "Base backup location /mnt/backup/backup.d is empty, running full backup..."
                BASEDIR='/mnt/backup/backup.d'
                kubectl exec mariadb-0 -n mariadb -- mariabackup --backup --target-dir=$BASEDIR --user=root --password=${SECRET_DB_ROOT_PWD}
                kubectl exec mariadb-0 -n mariadb -- echo $BASEDIR > /mnt/backup/BASEDIR
              else
                echo 'Running incremental backup...'
                BASEDIR=$(kubectl exec mariadb-0 -n mariadb -- cat /mnt/backup/BASEDIR)
                TARGETDIR="/mnt/backup/incremental.d/incr-$(date +'%Y-%b-%d_%H.%M')"
                echo "BASEDIR=$BASEDIR"
                echo "TARGETDIR=$TARGETDIR"
                kubectl exec mariadb-0 -n mariadb -- mkdir -p $TARGETDIR
                kubectl exec mariadb-0 -n mariadb -- mariabackup --backup --incremental-basedir=$BASEDIR --target-dir=$TARGETDIR --user=root --password=${SECRET_DB_ROOT_PWD}
                kubectl exec mariadb-0 -n mariadb -- echo $TARGETDIR > /mnt/backup/BASEDIR
                echo "Setting new BASEDIR=$TARGETDIR=$(kubectl exec mariadb-0 -n mariadb -- cat /mnt/backup/BASEDIR)"
              fi
              echo 'Backup process completed.'
              exit

          volumeMounts:
            - name: backup
              mountPath: /mnt/backup
      restartPolicy: Never
      volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: backup-mariadb
