---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: example-cluster
  namespace: postgres
spec:
  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-14.2-1
  postgresVersion: 14
  instances:
    # - name: instance1
    #   replicas: 2
    #   resources:
    #     limits:
    #       cpu: 2.0
    #       memory: 4Gi
    - dataVolumeClaimSpec:
        storageClassName: csi-truenas-iscsi-retain
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
        # # if need to pick up existing/retained PV
        # volumeName: "pvc-aef7ee64-4495-4813-b896-8a67edc53e58"

  # https://access.crunchydata.com/documentation/postgres-operator/5.1.0/tutorial/backups/
  # https://pgbackrest.org/configuration.html#section-repository/
  backups:
    pgbackrest:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.38-0
      configuration:
        - secret:
            name: cluster-secret
      global:
        # recommended path: /pgbackrest/$NAMESPACE/$CLUSTER_NAME/repoN
        repo1-path: /pgbackrest/vaultwarden/vaultwarden-db/repo1
        repo1-cipher-type: aes-256-cbc # if pgbackrest-secrets contains cipher for encryption
        repo1-retention-full: "2"
        repo1-retention-history: "365"
        repo1-s3-uri-style: path # for minio
        # repo1-storage-verify-tls: "n" # [y, n]
      repos:
        - name: repo1
          s3:
            bucket: "<YOUR_AWS_S3_BUCKET_NAME>"
            endpoint: "<YOUR_AWS_S3_ENDPOINT>"
            region: "<YOUR_AWS_S3_REGION>"
          schedules:
            # take a full backup weekly on Sunday at 1am
            full: "0 1 * * 0"
            # take differential backups daily at 1am on every day except Sunday.
            differential: "0 1 * * 1-6"
            # take incremental backup every 4 hours
            incremental: "0 */4 * * *"

      # allow manual backup by setting annotation
      # kubectl annotate -n <namespace> postgrescluster <clustername> [--overwrite] \
      #   postgres-operator.crunchydata.com/pgbackrest-backup="$(date)"
      manual:
        repoName: repo1
        options:
          - --type=full

  # https://access.crunchydata.com/documentation/postgres-operator/5.1.0/tutorial/user-management/
  # to set passwords, define in secret (see postgres-user-secret.yaml)
  users:
    # define default "postgres" superuser to pick up on password secret
    - name: postgres
    # create user "repl" with access to database "exampledb" and role attributes "replication"
    - name: repl
      databases:
        - exampledb
      # space-delimited options: https://www.postgresql.org/docs/current/role-attributes.html
      options: "REPLICATION"

  # https://access.crunchydata.com/documentation/postgres-operator/v5/architecture/pgadmin4/
  userInterface:
    pgAdmin:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgadmin4:ubi8-4.30-0
      dataVolumeClaimSpec:
        storageClassName: csi-truenas-iscsi
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
