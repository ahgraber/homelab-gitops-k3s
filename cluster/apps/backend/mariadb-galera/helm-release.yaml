---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mariadb-galera
  namespace: mariadb
spec:
  interval: 10m
  timeout: 10m  # extended period because of lengthy startup
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: mariadb-galera
      version: 5.13.3
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  values:
    image:
      debug: true

    replicaCount: 3

    ## Use existing secret (ignores rootUser.password, db.password, and galera.mariabackup.password)
    existingSecret: "mariadb-secret"

    # ## Galera configuration
    # galera:
    #   ## Bootstraping options
    #   ## ref: https://github.com/bitnami/bitnami-docker-mariadb-galera#bootstraping
    #   bootstrap:
    #     ## Node to bootstrap from, you will need to change this parameter in case you want to bootstrap from other node
    #     bootstrapFromNode: ""  # {0, 1, 2}
    #     ## Force safe_to_bootstrap in grastate.date file.
    #     ## This will set safe_to_bootstrap=1 in the node indicated by bootstrapFromNode.
    #     forceSafeToBootstrap: false

    ## initialize sql server
    initdbScripts:
      testsvc.sh: |
        #!/bin/sh
        if [[ $(hostname) == *-0  ]]; then
          echo "First node"

          export SERVICE=testsvc
          export DB_ROOT_PWD="MdfmeSsZrt54"
          export DB_USER_PWD="1234!"
          mysql -uroot -p${DB_ROOT_PWD} -e \
          "CREATE USER \"${SERVICE}\"@'%' IDENTIFIED VIA mysql_native_password USING \"${DB_USER_PWD}\";
          GRANT USAGE ON *.* TO \"${SERVICE}\"@'% REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;
          CREATE DATABASE IF NOT EXISTS `${SERVICE}`;
          GRANT ALL PRIVILEGES ON `${SERVICE}`.* TO \"${SERVICE}\"@'%';"
        else
          echo "Not first node"
        fi

    service:
      ## Kubernetes service type and port number
      type: ClusterIP
      port: 3306

    persistence:
      enabled: true
      storageClass: "csi-truenas-iscsi"
      size: 8Gi

    ## An array to add extra environment variables
    extraEnvVars:
      - name: TZ
        value: "America/New_York"

    ## MariaDB Galera containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    livenessProbe:
      enabled: true
      ## Once the startup probe has succeeded once, the liveness probe takes over
      initialDelaySeconds: 60 # 120
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      ## Initializing the database could take some time
      enabled: true
      initialDelaySeconds: 180 # 30
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    startupProbe:
      enabled: true
      ## Initializing the database could take some time
      # This allows 200 s delay (120s + 8*10s)
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 8
