apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: kube-prometheus-stack
    release: monitoring
  name: stackgres-rules
  namespace: monitoring
spec:
  groups:
    - name: StackGres
      rules:
        - alert: PostgresInstanceDown
          expr: pg_up == 0
          for: 1m
          labels:
            severity: critical
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Postgres server instance is down"
            description: "Postgres has not been responding for the past 1 minutes on {{ $labels.instance }}"
            title: "Postgres server instance {{ $labels.instance }} is down "
        - alert: PostgresExporterErrors
          expr: pg_exporter_last_scrape_error == 1
          for: 10m
          labels:
            severity: critical
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Postgres Exporter is down or is showing errors"
            description: "postgres-exporter is not running or it is showing errors {{ $labels.instance }}"
        - alert: PostgresReplicationLagSizeTooLarge
          expr: pg_replication_status_lag_size > 1e+09
          for: 5m
          labels:
            severity: critical
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Postgres replication lag size is to large"
            description:
              "Replication lag size on server {{$labels.instance}} ({{$labels.application_name}}) is currently {{ $value | humanize1024}}B behind the leader in cluster {{$labels.cluster_name}}"
        - alert: PostgresTooManyDeadTuples
          expr: ((pg_stat_user_tables_n_dead_tup > 1e+06) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.1
          for: 30m
          labels:
            severity: info
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "PostgreSQL dead tuples is too large"
            description: "The dead tuple ratio of {{$labels.relname}} on database {{$labels.datname}} is greater than 10% in cluster {{$labels.cluster_name}}"
        - alert: PostgresInactiveReplicationSlots
          expr: pg_replication_slots_active == 0
          for: 10m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "There are inactive replications slots"
            description: "The are some inactive replication slots on {{$labels.instance}} in cluster {{$labels.cluster_name}}"
        - alert: PostgresSplitBrain
          expr: count by(cluster_name) (pg_replication_is_replica == 0) > 1
          for: 1m
          labels:
            severity: critical
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "There are more than one instance in read-write mode"
            description: "Split Brain: too many postgres databases in cluster {{$labels.cluster_name}} in read-write mode"
        - alert: PostgresTooManyConnections
          expr: sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) > pg_settings_max_connections * 0.9
          for: 5m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: Postgresql too many connections (instance {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PostgreSQL instance has too many connections\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
        - alert: PostgresNotEnoughConnections
          expr: sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) < 5
          for: 5m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: Postgresql not enough connections (instance {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PostgreSQL instance should have more connections (> 5)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
        - alert: PostgresPromotedNode
          expr: pg_replication_is_replica and changes(pg_replication_is_replica[1m]) > 0
          for: 5m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Postgresql promoted node (instance {{ $labels.instance }}, cluster {{ $labels.cluster_name }})"
            description: "Postgresql standby server has been promoted as primary node\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
        - alert: PostgresLongRunningTransactionLeaderNode
          expr: pg_long_running_transactions_transactions>0 and on (instance)(pg_replication_is_replica == 0)
          for: 10m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Long running transaction on the leader node, {{ $labels.instance }} cluster {{ $labels.cluster_name }}"
            description: |-
              There are long running transactions on the leader node, {{ $labels.instance }}
                COUNT = {{ $value }}
                LABELS: {{ $labels }}
        - alert: PostgresLongRunningTransactionReplicaNode
          expr: pg_long_running_transactions_transactions>0 and on (instance)(pg_replication_is_replica == 1)
          for: 10m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: "Long running transaction on a replica node, {{ $labels.instance }}, cluster {{ $labels.cluster_name }}"
            description: |-
              There are long running transactions on a replica node, {{ $labels.instance }}
                COUNT = {{ $value }}
                LABELS: {{ $labels }}
        # Connection Pooling alerts
        - alert: PgBouncerWaitingClients
          expr: pgbouncer_show_pools_cl_waiting > 0
          for: 10m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: PgBouncer has waiting clients on instance {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PgBouncer instance has waiting clients\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
        - alert: PgBouncerNotEnoughConnections
          expr:
            (sum by (database,instance) (pgbouncer_show_pools_cl_active{database!~"template.*|postgres|pgbouncer"}) + sum by (database, instance)
            (pgbouncer_show_pools_cl_waiting{database!~"template.*|postgres|pgbouncer"}))  - on (database,instance) (pgbouncer_show_databases_pool_size{database!~"template.*|postgres|pgbouncer"}) > 0
          for: 10m
          labels:
            severity: critical
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: PgBouncer pool size is not enough for the current connections on {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PgBouncer is getting more connections than the pool size, extra connections = {{ $value }}"
        - alert: PgBouncerPoolFillingUp
          expr:
            (sum by (database,instance) (pgbouncer_show_databases_pool_size{database!~"template.*|postgres|pgbouncer"})  - on (database,instance) pgbouncer_show_databases_current_connections)  <= 15
          for: 1m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: PgBouncer pool is filling up on {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PgBouncer pool is filling up, remaining connections = {{ $value }}"
        - alert: PgBouncerAvgWaitTimeTooHigh
          expr: pgbouncer_show_stats_avg_wait_time > 1e+6
          for: 5m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: PgBouncer time spent by clients waiting for a connections is too high on {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PgBouncer wait for a server connections is too high = {{ $value }}"
        - alert: PgBouncerQueryTimeTooHigh
          expr: pgbouncer_show_stats_avg_query_time > 5e+6
          for: 5m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: PgBouncer average query duration more than 5 seconds on {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "PgBouncer average query duration more than 5 seconds = {{ $value }}"
        - alert: DatabaseLowDiskAvailable
          expr: (1.0 - node_filesystem_avail_bytes{mountpoint="/var/lib/postgresql",fstype!=""} / node_filesystem_size_bytes{mountpoint="/var/lib/postgresql",fstype!=""}) * 100 >= 80
          for: 15m
          labels:
            severity: warning
            service: "PostgreSQL"
            cluster: "StackGres"
          annotations:
            summary: Database disk is filling up currently have less than 20% available on {{ $labels.instance }} in cluster {{$labels.cluster_name}})
            description: "Database disk is filling up currently have less than 20%, currently occupied {{ $value }} %"
