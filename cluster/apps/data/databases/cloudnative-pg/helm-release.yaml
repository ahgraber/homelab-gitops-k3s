---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cnpg-controller-manager
  namespace: cnpg-system
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://github.com/cloudnative-pg/charts
      chart: cloudnative-pg
      version: 0.16.0
      sourceRef:
        kind: HelmRepository
        name: cloudnativepg-charts
        namespace: flux-system

  # ### disable installing CRDs from helm chart
  # postRenderers:
  #   - kustomize:
  #       patches:
  #         - target:
  #             group: apiextensions.k8s.io
  #             version: v1
  #             kind: CustomResourceDefinition
  #           patch: |-
  #             $patch: delete
  #             apiVersion: apiextensions.k8s.io/v1
  #             kind: CustomResourceDefinition
  #             metadata:
  #               name: not-used

  values:
    crds:
      create: true
    replicaCount: 1

    # Operator configuration
    config:
      # -- Specifies whether the secret should be created
      create: true
      # -- Specifies whether it should be stored in a secret, instead of a configmap
      secret: false
      # Examples:
      # INHERITED_ANNOTATIONS: categories
      # INHERITED_LABELS: environment, workload, app

      data: {}
      name: cnpg-controller-manager-config

    # -- Additinal arguments to be added to the operator's args list
    additionalArgs: []

    webhook:
      port: 9443
      mutating:
        create: true
        failurePolicy: Fail
      validating:
        create: true
        failurePolicy: Fail

    serviceAccount:
      create: true
    rbac:
      create: true
    podSecurityContext:
      runAsUser: 1001
      # fsGroup: 2000

    service:
      type: ClusterIP
      # -- DO NOT CHANGE THE SERVICE NAME as it is currently used to generate the certificate
      # and can not be configured
      name: cnpg-webhook-service
      port: 443

    resources:
      limits:
        memory: 200Mi
      requests:
        cpu: 25m
        memory: 100Mi

    # -- Nodeselector for the operator to be installed
    nodeSelector: {}

    # -- Tolerations for the operator to be installed
    tolerations: []

    # -- Affinity for the operator to be installed
    affinity: {}
