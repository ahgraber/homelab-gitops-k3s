---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: keycloak
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: keycloak
      version: 5.1.3
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  values:
    image:
      debug: true

    auth:
      createAdminUser: true
      adminUser: admin
      # adminPassword: ""
      # managementUser: manager
      # managementPassword: ""
      existingSecret: "secret-keycloak"

      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#tls-encryption
      tls:
        enabled: false

    ## ref: https://www.keycloak.org/docs/latest/server_installation/#_setting-up-a-load-balancer-or-proxy
    proxyAddressForwarding: false

    configuration: ""
    ## @param existingConfigmap Name of existing ConfigMap with Keycloak configuration
    ## NOTE: When it's set the configuration parameter is ignored
    ##
    existingConfigmap: ""

    ## Configuration for keycloak-config-cli
    ## ref: https://github.com/adorsys/keycloak-config-cli
    keycloakConfigCli:
      enabled: false

    tolerations: []

    service:
      type: ClusterIP
      port: 8080
      httpsPort: 8443

    ingress:
      enabled: false
      hostname: auth.${SECRET_DOMAIN}

    ## Metrics configuration
    metrics:
      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#enabling-statistics
      enabled: false
      service:
        port: 9990
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "{{ .Values.metrics.service.port }}"
      ## Prometheus Operator ServiceMonitor configuration
      serviceMonitor:
        enabled: false

    startupProbe:
      enabled: false
      httpGet:
        path: /auth/
        port: http
      initialDelaySeconds: 30
      periodSeconds: 5
      timeoutSeconds: 1
      failureThreshold: 60
      successThreshold: 1

    livenessProbe:
      enabled: true
      httpGet:
        path: /auth/
        port: http
      initialDelaySeconds: 300
      periodSeconds: 1
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    readinessProbe:
      enabled: true
      httpGet:
        path: /auth/realms/master
        port: http
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    postgresql:
      enabled: false

    externalDatabase:
    # host: "postgresql://authentik:${SECRET_DB_USER_PWD}@postgresql.postgresql:5432/keycloak"
      host: postgresql.postgresql
      port: 5432
      user: keycloak
      password: ${SECRET_DB_USER_PWD}
      database: keycloak
      # existingSecret: ""
