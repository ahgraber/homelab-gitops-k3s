---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: keycloak
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: keycloak
      version: 9.0.1
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  values:
    image:
      repository: bitnami/keycloak
      # tag: 15.1.1-debian-10-r10
      tag: 16.1.1-debian-10-r42
      debug: true

    auth:
      createAdminUser: true
      adminUser: admin
      # adminPassword: ""
      # managementUser: manager
      # managementPassword: ""
      existingSecret: "secret-keycloak"

      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#tls-encryption
      tls:
        enabled: false

    configuration: ""
    ## @param existingConfigmap Name of existing ConfigMap with Keycloak configuration
    ## NOTE: When it's set the configuration parameter is ignored
    ##
    existingConfigmap: ""

    ## ref: https://www.keycloak.org/docs/latest/server_installation/#_setting-up-a-load-balancer-or-proxy
    proxyAddressForwarding: true

    extraEnvVars:
      # - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      #   value: "true"
      - name: KEYCLOAK_FRONTEND_URL
        value: "https://keycloak.{SECRET_DOMAIN}"
      # - name: KEYCLOAK_LOG_LEVEL
      #   value: DEBUG

    tolerations: []

    service:
      type: ClusterIP
      port: 8080
      # httpsPort: 8443

    ingress:
      enabled: false
      hostname: auth.${SECRET_DOMAIN}

    ## Metrics configuration
    metrics:
      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#enabling-statistics
      enabled: false
      service:
        port: 9990
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "{{ .Values.metrics.service.port }}"
      ## Prometheus Operator ServiceMonitor configuration
      serviceMonitor:
        enabled: false

    ## Configuration for keycloak-config-cli
    ## ref: https://github.com/adorsys/keycloak-config-cli
    keycloakConfigCli:
      enabled: false

    # use bundled dbs?
    postgresql:
      enabled: true
      auth:
        databasae: keycloak
        username: keycloak
        password: ${SECRET_DB_USER_PWD}
      persistence:
        enabled: true
        existingClaim: keycloak-db

      primary:
        persistence:
          enabled: true
          existingClaim: keycloak-db

        podAnnotations:
          backup.velero.io/backup-volumes: data
          pre.hook.backup.velero.io/container: fsfreeze
          pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
          post.hook.backup.velero.io/container: fsfreeze
          post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'
        sidecars:
          - name: fsfreeze
            image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
            volumeMounts:
              - name: data
                mountPath: /data
            securityContext:
              privileged: true

    # externalDatabase:
    #   # host: "{{ .Release.Name }}-postgresql"
    #   # port: 5432
    #   database: keycloak
    #   user: keycloak
    #   password: ${SECRET_DB_USER_PWD}
    #   # existingSecret: ""

    livenessProbe:
      enabled: true
      initialDelaySeconds: 0 # 300 may be needed on first start
      periodSeconds: 1
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    startupProbe:
      ## When enabling this, make sure to set initialDelaySeconds to 0 for livenessProbe and readinessProbe
      enabled: true
      initialDelaySeconds: 300
      periodSeconds: 5
      timeoutSeconds: 1
      failureThreshold: 60
      successThreshold: 1
