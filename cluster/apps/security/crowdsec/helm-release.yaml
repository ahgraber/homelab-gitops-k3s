---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://crowdsecurity.github.io/helm-charts
      chart: crowdsec
      version: 0.8.1
      sourceRef:
        kind: HelmRepository
        name: crowdsec-charts
        namespace: flux-system
      interval: 5m
  values:
    # -- for raw logs format: json or cri (docker|containerd)
    container_runtime: containerd

    image:
      # -- docker image repository name
      repository: crowdsecurity/crowdsec
      # -- pullPolicy
      pullPolicy: IfNotPresent
      # -- docker image tag
      tag: "latest"

    # # If you want to specify secrets that will be used for all your crowdsec-agents
    # # secrets can be provided be env variables
    # secrets:
    #   # -- agent username (default is generated randomly)
    #   username: ""
    #   # -- agent password (default is generated randomly)
    #   password: ""

    # lapi (local api) will deploy pod with crowdsec lapi and dashboard as deployment
    lapi:
      env:
        # by default disable the agent for local API pods
        - name: DISABLE_AGENT
          value: "true"
        - name: ENROLL_KEY
          valueFrom:
            secretKeyRef:
              name: crowdsec-secret
              key: ENROLL_KEY
        - name: ENROLL_INSTANCE_NAME
          value: "k8s_cluster"
        # - name: ENROLL_TAGS
        #   value: "k8s linux test"
        # # If it's a test, we don't want to share signals with CrowdSec so disable the Online API.
        # - name: DISABLE_ONLINE_API
        #   value: "true"
      dashboard:
        # -- Enable Metabase Dashboard (by default disabled)
        enabled: false
        ingress:
          enabled: false

      resources:
        requests:
          cpu: 150m
          memory: 100M
        limits:
          memory: 100M

      # -- Enable persistent volumes
      persistentVolume:
        # -- Persistent volume for data folder. Stores e.g. registered bouncer api keys
        data:
          enabled: true
          accessModes:
            - ReadWriteOnce
          storageClassName: "ceph-fs"
          size: 1Gi
        # -- Persistent volume for config folder. Stores e.g. online api credentials
        config:
          enabled: true
          accessModes:
            - ReadWriteOnce
          storageClassName: "ceph-fs"
          size: 100Mi

      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"

      # -- Enable service monitoring (exposes "metrics" port "6060" for Prometheus)
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

    # agent will deploy pod on every node as daemonSet to read wanted pods logs
    agent:
      acquisition:
        # -- Specify each pod you want to process it logs (namespace, podName and program)
        - namespace: networking
          podName: traefik-*
          program: traefik
        # - namespace: security
        #   podName: keycloak-postgresql-*
        #   program: pgsql
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 150m
          memory: 100Mi
      # -- Enable persistent volumes
      persistentVolume:
        # -- Persistent volume for config folder. Stores local config (parsers, scenarios etc.)
        config:
          enabled: true
          accessModes:
            - ReadWriteMany
          storageClassName: "ceph-fs"
          size: 100Mi
      # -- environment variables from crowdsecurity/crowdsec docker image
      env:
        # COLLECTIONS are bundles of PARSERS and SCENARIOS
        - name: COLLECTIONS
          value: |
            crowdsecurity/base-http-scenarios
            crowdsecurity/http-cve
            crowdsecurity/linux
            crowdsecurity/sshd
            crowdsecurity/traefik
            crowdsecurity/mariadb
            crowdsecurity/mysql
            crowdsecurity/pgsql
            crowdsecurity/wordpress

        - name: PARSERS
          # https://hub.crowdsec.net/author/crowdsecurity/configurations/cri-logs
          # https://hub.crowdsec.net/author/crowdsecurity/configurations/docker-logs
          value: |
            crowdsecurity/cri-logs
            crowdsecurity/docker-logs

        # - name: SCENARIOS
        #   value: |

        - name: TZ
          value: "${TIMEZONE}"

        - name: DISABLE_ONLINE_API # default disable local API on the agent pod
          value: "false"
        # - name: LEVEL_TRACE
        #   value: "false"
        # - name: LEVEL_DEBUG
        #   value: "false"
        # - name: LEVEL_INFO
        #   value: "false"

      # -- tolerations for agent
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"

      # -- Enable service monitoring (exposes "metrics" port "6060" for Prometheus)
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
