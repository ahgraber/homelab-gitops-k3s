---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 6h
  maxHistory: 2
  timeout: 20m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 33.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    podAnnotations:
      annotations:
        configmap.reloader.stakater.com/reload:
          "kps-values-general, kps-values-prometheus, kps-values-alertmanager"
    fullnameOverride: prometheus

    defaultRules:
      create: true

    global:
      rbac:
        create: true

    grafana:
      enabled: false # manage by itself
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            global:
              enabled: true

    kubeApiServer:
      enabled: true

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance

    kubeControllerManager:
      enabled: true
      endpoints:
        - 10.2.113.10
        - 10.2.113.11
        - 10.2.113.12
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true

    coreDns:
      enabled: true

    kubeEtcd:
      enabled: true
      endpoints:
        - 10.2.113.10
        - 10.2.113.11
        - 10.2.113.12
      service:
        enabled: true
        port: 2381
        targetPort: 2381

    kubeProxy:
      enabled: true
      endpoints:
        - 10.2.113.10
        - 10.2.113.11
        - 10.2.113.12

    kubeScheduler:
      enabled: true
      endpoints:
        - 10.2.113.10
        - 10.2.113.11
        - 10.2.113.12
      service:
        enabled: true
        port: 10259
        targetPort: 10259
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true

    kubeStateMetrics:
      enabled: true
      fullnameOverride: kube-state-metrics

    nodeExporter:
      enabled: true

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"

    ## Manages Prometheus and Alertmanager components
    prometheusOperator:
      enabled: true
      # Setting this option to 0 to disable cpu limits
      # see https://github.com/prometheus-operator/prometheus-operator/blob/master/cmd/operator/main.go#L175
      # configReloaderCpu: 0
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi

    prometheus:
      ingress:
        enabled: false

      # Service for thanos service discovery on sidecar
      thanosService:
        enabled: false
      thanosServiceMonitor:
        enabled: false

      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 7d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: prometheus-data
              namespace: monitoring
            spec:
              storageClassName: "csi-truenas-iscsi"
              resources:
                requests:
                  storage: 10Gi
        # resources:
        #   requests:
        #     memory: 3072Mi
        #   limits:
        #     memory: 4096Mi

        # thanos:
        #   image: quay.io/thanos/thanos:v0.23.1
        #   version: v0.22.0
        #   objectStorageConfig:
        #     name: thanos-objstore-secret
        #     key: objstore.yml

    ## Configuration for alertmanager
    ## ref: https://prometheus.io/docs/alerting/alertmanager/
    alertmanager:
      config:
        receivers:
          - name: "null"
          - name: "email"
            email_configs:
              - to: "${SECRET_DEFAULT_EMAIL}"
                from: "${SECRET_SMTP_ADDRESS}"
                smarthost: in-v3.mailjet.com:587
                auth_username: "${SECRET_SMTP_USER}"
                auth_password: "${SECRET_SMTP_PWD}"
                # auth_identity: "${SECRET_SMTP_ADDRESS}"
                # auth_secret: "${SECRET_SMTP_PWD}"
                require_tls: true
                # prettier-ignore
                text: >-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}

                  {{ range .Alerts -}}
                    *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                  {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}
                  *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}

        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "email"
          routes:
            - receiver: "null"
              match:
                alertname: InfoInhibitor
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: "email"
              match_re:
                # severity: critical|warning
                severity: critical
              continue: true

        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]

      ingress:
        enabled: false

      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            metadata:
              name: alertmanager-data
              namespace: monitoring
            spec:
              storageClassName: csi-truenas-iscsi
              resources:
                requests:
                  storage: 1Gi
        resources:
          requests:
            memory: 48Mi
          limits:
            memory: 96Mi

  # valuesFrom:
  #   - kind: ConfigMap
  #     name: kps-values-general
  #     valuesKey: values
  #   - kind: ConfigMap
  #     name: kps-values-prometheus
  #     valuesKey: values
  #   - kind: ConfigMap
  #     name: kps-values-alertmanager
  #     valuesKey: values
