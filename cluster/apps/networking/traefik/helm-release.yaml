---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
  annotations:
    metallb.universe.tf/address-pool: frontend
spec:
  interval: 5m

  # see: https://github.com/fluxcd/helm-controller/issues/142
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  timeout: 10m

  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 10.1.1
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
  values:
    deployment:
      kind: Deployment
      replicas: 3
    service:
      enabled: true
      type: LoadBalancer
      spec:
        # expects IP only, no netmask
        # externalIPs:
        #   - "${METALLB_FRONTEND}"  # this should be the metallb IP reserved for Ingress
        loadBalancerIP: '${METALLB_FRONTEND}' # this should be the metallb IP reserved for Ingress
        # externalTrafficPolicy: Local  # Cluster
      # annotations:
    logs:
      general:
        format: json
        level: DEBUG
      access:
        enabled: true
        format: json
    # installCRDs: true
    ingressClass:
      enabled: false
      isDefaultClass: false
      fallbackApiVersion: v1
    ingressRoute:
      dashboard:
        enabled: false # we'll use a custom ingressRoute with basic auth instead of the default one

    globalArguments:
      - '--global.checknewversion=false'
      - '--global.sendanonymoususage=false'
    additionalArguments:
      - '--api'
      - '--api.dashboard=true'
      - '--api.debug=true'
      # - "--api.insecure=true"
      - '--serverstransport.insecureskipverify=true'
      # - "--entryPoints.mysql.http.middlewares=rfc1918"
      # - "--entryPoints.metrics.http.middlewares=rfc1918"
      # - "--entryPoints.traefik.http.middlewares=rfc1918"
      ## providers
      ## if next line is enabled, will need to add an annotation to ingresses you create to servce those requests:
      # - "--providers.kubernetesingress.ingressclass=traefik"
      # - "--providers.kubernetesingress.ingressendpoint.ip=${METALLB_FRONTEND}"
      ## if next line is enabled, will need to add an annotation to ingresses you create to servce those requests:
      # - "--providers.kubernetescrd.ingressclass=traefik-crd"
      # - "--providers.kubernetescrd.ingressendpoint.ip=${METALLB_FRONTEND}"
      ## other niceties
      - '--log.level=INFO'
      - '--ping'

    env:
      - name: TZ
        value: 'America/New_York'

    metrics:
      prometheus:
        entryPoint: metrics
    pilot:
      enabled: false
    # equivalent to entryPoints static config
    ports:
      traefik:
        # port: 9000
        expose: true
        # exposedPort: 9000
      web:
        # port: 80
        expose: true
        exposedPort: 80
        redirectTo: websecure
      websecure:
        # port: 443
        expose: true
        exposedPort: 443
        tls:
          enabled: true
          options: 'default'
      metrics:
        port: 8082
        expose: true
        exposedPort: 8082
      mysql:
        port: 3306
        expose: true
        exposedPort: 3306
    providers:
      kubernetesCRD:
        enabled: true
      kubernetesIngress:
        enabled: true
    rbac:
      enabled: true
    ## Resolves: error while building entryPoint web: error preparing server: error opening listener: listen tcp :80: bind: permission denied
    ## https://stackoverflow.com/questions/66138370/permission-problem-w-helm3-installation-of-traefik-on-port-80-hostnetwork
    securityContext:
      capabilities:
        drop: [ALL]
        add: [NET_BIND_SERVICE]
      readOnlyRootFilesystem: true
      runAsGroup: 0 # 65532
      runAsNonRoot: false # true
      runAsUser: 0 # 65532

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true

    tolerations:
      - key: 'node-role.kubernetes.io/master'
        operator: 'Exists'
