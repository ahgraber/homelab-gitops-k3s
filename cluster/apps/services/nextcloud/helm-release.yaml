---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm
      chart: nextcloud
      version: 2.12.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: nextcloud
      tag: "23.0.2" # https://hub.docker.com/_/nextcloud/?tab=tags

    env:
      PHP_MEMORY_LIMIT: 256M
      NEXTCLOUD_DOMAIN_NAME: ${SECRET_DOMAIN}

    ingress:
      enabled: false

    persistence:
      enabled: true
      existingClaim: nextcloud-data

    podAnnotations:
      backup.velero.io/backup-volumes: nextcloud-main # nextcloud-data
      # pre.hook.backup.velero.io/container: fsfreeze
      # pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/var/www/"]'
      # post.hook.backup.velero.io/container: fsfreeze
      # post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/var/www/"]'
      # secret.reloader.stakater.com/reload: "nextcloud"

    # ## Currently no additonalContainers or sidecars enabled in helm chart
    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #     securityContext:
    #       privileged: true

    # lifecycle:
    #   postStartCommand:
    #     [
    #       "/bin/sh",
    #       "-c",
    #       'echo "ServerName cloud.${SECRET_DOMAIN}" | tee -a /etc/apache2/apache2.conf',
    #     ]

    livenessProbe:
      enabled: false
      initialDelaySeconds: 300
    readinessProbe:
      enabled: false
      initialDelaySeconds: 240
    startupProbe:
      enabled: false

    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      password: ${SECRET_DEFAULT_PWD}
      # datadir: /var/www/html/data
      configs:
        # ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/config_sample_php_parameters.html
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'default_locale' => 'en_US',
            'default_phone_region' => 'US',
            'enable_previews' => 'false',
            'filelocking.enabled' => 'true',
            'debug' => true,
            'loglevel' => '0',
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
            'trusted_domains' => array('nextcloud', 'cloud.${SECRET_DOMAIN}'),
            'trusted_proxies' => array('10.42.0.0/16', '10.43.0.0/16'),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED', 'HTTP_FORWARDED_FOR'),
          );

      mail:
        enabled: true
        fromAddress: "noreply"
        domain: "mail.${SECRET_DOMAIN}"
        smtp:
          host: in-v3.mailjet.com
          secure: tls
          port: 587
          authtype: LOGIN
          name: ${SECRET_SMTP_USER}
          password: ${SECRET_SMTP_PWD}

    cronjob:
      enabled: true

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: "postgresql"
      host: nextcloud-postgresql.nextcloud
      user: nextcloud
      password: ${SECRET_DB_USER_PWD}
      database: nextcloud

    postgresql:
      enabled: true

      postgresqlUsername: nextcloud
      postgresqlPassword: ${SECRET_DB_USER_PWD}
      postgresqlDatabase: nextcloud

      persistence:
        enabled: true
        existingClaim: nextcloud-db

      primary:
        podAnnotations:
          backup.velero.io/backup-volumes: data
          pre.hook.backup.velero.io/container: fsfreeze
          pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
          post.hook.backup.velero.io/container: fsfreeze
          post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'
        sidecars:
          - name: fsfreeze
            image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
            volumeMounts:
              - name: data
                mountPath: /data
            securityContext:
              privileged: true

    redis:
      enabled: true
      password: ${SECRET_DB_USER_PWD}
      storageClass: "local-path"
