---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm
      chart: nextcloud
      version: 2.11.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: nextcloud
      tag: "23.0.0"

    env:
      PHP_MEMORY_LIMIT: 256M

    ingress:
      main:
        enabled: false

    persistence:
      enabled: true
      existingClaim: nextcloud-data

    podAnnotations:
      backup.velero.io/backup-volumes: nextcloud-data
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      # secret.reloader.stakater.com/reload: "vaultwarden"

    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        memory: 1024Mi

    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true

    livenessProbe:
      enabled: true
    readinessProbe:
      enabled: true
    startupProbe:
      enabled: false

    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      password: ${SECRET_DEFAULT_PASSWORD}
      datadir: /var/www/html/data
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array('10.0.0.0/8')
          );

      mail:
        enabled: true
        fromAddress: "noreply@mail.${SECRET_DOMAIN}"
        domain: ${SECRET_DOMAIN}
        smtp:
          host: in-v3.mailjet.com
          secure: ssl
          port: 587
          authtype: LOGIN
          name: ${SECRET_SMTP_USER}
          password: ${SECRET_SMTP_PASS}

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: 'postgresql'
      password: ${SECRET_DB_USER_PWD}

    postgresql:
      enabled: true

      postgresqlUsername: nextcloud
      postgresqlPassword: ${SECRET_DB_USER_PWD}
      postgresqlDatabase: nextcloud

      persistence:
        enabled: true
        existingClaim: nextcloud-db

      primary:
        podAnnotations:
          backup.velero.io/backup-volumes: data
          pre.hook.backup.velero.io/container: fsfreeze
          pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
          post.hook.backup.velero.io/container: fsfreeze
          post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

        sidecars:
          - name: fsfreeze
            image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
            volumeMounts:
              - name: data
                mountPath: /data
            securityContext:
              privileged: true

      resources:
        requests:
          memory: 256Mi
        limits:
          memory: 1024Mi

    cronjob:
      enabled: true

    redis:
      enabled: true

      master:
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 256Mi

      replica:
        replicaCount: 1
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 256Mi

    postgresql:
      enabled: true

      postgresqlUsername: nextcloud
      # postgresqlPassword: set by valuesFrom
      postgresqlDatabase: nextcloud

      persistence:
        enabled: true
        existingClaim: nextcloud-postgresql

      primary:
        podAnnotations:
          backup.velero.io/backup-volumes: data
          pre.hook.backup.velero.io/container: fsfreeze
          pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
          post.hook.backup.velero.io/container: fsfreeze
          post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

        sidecars:
          - name: fsfreeze
            image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
            volumeMounts:
              - name: data
                mountPath: /data
            securityContext:
              privileged: true

      resources:
        requests:
          memory: 256Mi
        limits:
          memory: 1024Mi

  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: CronJob
              name: nextcloud-cron
            patch:
              - op: add
                path: /spec/jobTemplate/metadata
                value:
                  annotations:
                    botkube.io/disable: "true"
              - op: add
                path: /spec/jobTemplate/spec/template/metadata
                value:
                  annotations:
                    botkube.io/disable: "true"

  valuesFrom:
    - kind: Secret
      name: nextcloud
      valuesKey: postgresql_password
      targetPath: postgresql.postgresqlPassword
      optional: false
    - kind: Secret
      name: nextcloud
      valuesKey: postgresql_password
      targetPath: externalDatabase.password
      optional: false
