---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden-db
  namespace: vaultwarden
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://github.com/CrunchyData/postgres-operator-examples/blob/main/helm/install/
      chart: ./helm/postgres
      version: 0.2.3
      sourceRef:
        kind: GitRepository
        name: crunchdata-charts-git
        namespace: flux-system
      interval: 5m
  values:
    name: vaultwarden-db
    postgresVersion: 14

    metadata:
      labels:
        app.kubernetes.io/instance: vaultwarden

    instances:
      - name: vaultwarden-db
        # replicas: 2
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 100m
            memory: 512Mi
        dataVolumeClaimSpec:
          storageClassName: csi-truenas-iscsi-retain
          accessModes:
            - "ReadWriteOnce"
          resources:
            requests:
              storage: 1Gi
          # if need to pick up existing/retained PV
          # may have to remove prior claimRef
          volumeName: "pvc-a40b88ba-7111-4985-bfd0-153e85717f70"

    # https://access.crunchydata.com/documentation/postgres-operator/5.1.0/tutorial/backups/
    # https://pgbackrest.org/configuration.html#section-repository/
    pgBackRestConfig:
      configuration:
        - secret:
            name: vaultwarden-db-secret
      global:
        # recommended path: /pgbackrest/$NAMESPACE/$CLUSTER_NAME/repoN
        repo1-path: /pgbackrest/services/vaultwarden-db/repo1
        repo1-cipher-type: aes-256-cbc # if pgbackrest-secrets contains cipher for encryption
        repo1-retention-full: "2"
        repo1-retention-history: "365"
        repo1-s3-uri-style: path # for minio
        # repo1-storage-verify-tls: "n" # [y, n]
      repos:
        - name: repo1
          s3:
            bucket: "postgres"
            endpoint: "https://truenas.${SECRET_DOMAIN}:9000"
            # endpoint: "10.2.1.1:9000"
            region: "us-east"
          schedules:
            # take a full backup daily at 1am
            full: "0 1 * * *"
            # take incremental backup every 4 hours
            incremental: "0 */4 * * *"

      # allow manual backup by setting annotation
      # kubectl annotate -n <namespace> postgrescluster <clustername> [--overwrite] \
      #   postgres-operator.crunchydata.com/pgbackrest-backup="$(date)"
      manual:
        repoName: repo1
        options:
          - --type=full

    # https://access.crunchydata.com/documentation/postgres-operator/5.1.0/tutorial/user-management/
    # to set passwords, define in secret
    users:
      # define default "postgres" superuser to pick up on password secret
      - name: postgres
      # create user "pg_repl" with access to database "exampledb" and role attributes "replication"
      - name: vaultwarden
        databases:
          - vaultwarden
        # options: https://www.postgresql.org/docs/current/role-attributes.html
        options: "LOGIN CREATEDB"
      # create user "repl" with access to database "exampledb" and role attributes "replication"
      - name: repl
        databases:
          - vaultwarden
        # options: https://www.postgresql.org/docs/current/role-attributes.html
        options: "REPLICATION"
