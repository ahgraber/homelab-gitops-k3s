---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:

  # deps:
  #   desc: Create a Python virtual env and install required packages
  #   cmds:
  #     - "{{.PYTHON_BIN}} -m venv {{.ROOT_DIR}}/.venv"
  #     - .venv/bin/python3 -m pip install --upgrade pip setuptools wheel
  #     - .venv/bin/python3 -m pip install --upgrade --requirement "{{.ROOT_DIR}}/requirements.txt"
  #     - .venv/bin/ansible-galaxy install --role-file "{{.ROOT_DIR}}/requirements.yaml" --force

  deps:
    desc: Install Ansible with pipx
    cmds:
      - pipx install --include-deps ansible
      - pipx runpip ansible install -r "{{.ROOT_DIR}}/requirements.txt"
      - ansible-galaxy install --role-file "{{.ROOT_DIR}}/requirements.yaml" --force
    preconditions:
      - sh: command -v pipx
        msg: |
          pipx is not installed.
          Head over to https://pypa.github.io/pipx/installation/ to get up and running.

  init:
    desc: Initialize configuration files
    dir: "{{.BOOTSTRAP_DIR}}"
    cmds:
      - cp -n vars/addons.sample.yaml vars/addons.yaml
      - cp -n vars/config.sample.yaml vars/config.yaml
      - cmd: echo "=== Configuration files copied ==="
        silent: true
      - cmd: echo "Proceed with updating the configuration files..."
        silent: true
      - cmd: echo "{{.BOOTSTRAP_DIR}}/vars/config.yaml"
        silent: true
      - cmd: echo "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
        silent: true
    status:
      - test -f "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
      - test -f "{{.BOOTSTRAP_DIR}}/vars/config.yaml"

  render:
    desc: Render repository from Ansible templates & vars
    dir: "{{.BOOTSTRAP_DIR}}"
    cmd: ansible-playbook render.yaml
    env:
      ANSIBLE_DISPLAY_SKIPPED_HOSTS: "false"
