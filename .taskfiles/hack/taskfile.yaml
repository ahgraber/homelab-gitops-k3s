---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:

  relpath:
    desc: Calculate relative path from one file to another
    summary: ...
    dir: "{{.ROOT_DIR}}"
    cmd: echo $(realpath --relative-to=$(dirname "{{.start}}") "{{.end}}")
    requires:
      vars: ["start"]
    vars:
      # start:
      end: '{{.end | default "./kubernetes/templates/volsync"}}'
    # preconditions:
    #   - { msg: "Start file not found", sh: "test -f {{.start}}" }
    #   - { msg: "End file not found", sh: "test -f {{.end}}" }

  ks-deploy:
    desc: Deploy from local (for testing)
    cmds:
      - |
        # Export vars in the config and secret files to the current env
        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(sops -d "{{.cluster_secret_file}}" | yq eval '.stringData' - | sed 's/: /=/g')
        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(sops -d "{{.custom_secret_file}}" | yq eval '.stringData' - | sed 's/: /=/g')

        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(yq eval '.data' "{{.cluster_config_file}}" | sed 's/: /=/g')
        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(yq eval '.data' "{{.custom_config_file}}" | sed 's/: /=/g')

        # Build the manifests in ks_path, substitute env with the variables and then apply to the cluster
        kustomize build --load-restrictor=LoadRestrictionsNone "{{.ks_path}}" \
            | envsubst \
                | kubectl apply --server-side -f -
    vars:
      cluster_secret_file: '{{.cluster_secret_file | default "./kubernetes/flux/vars/cluster-secrets.sops.yaml"}}'
      custom_secret_file: '{{.cluster_secret_file | default "./kubernetes/flux/vars/custom-secrets.sops.yaml"}}'
      cluster_config_file: '{{.cluster_config_file | default "./kubernetes/flux/vars/cluster-settings.yaml"}}'
      ks_path: '{{ or .ks_path (fail "kustomization `ks_path` is required") }}'

  ks-undeploy:
    desc: Revert deployment from local (for testing)
    cmds:
      - |
        # Export vars in the config and secret files to the current env
        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(sops -d "{{.cluster_secret_file}}" | yq eval '.stringData' - | sed 's/: /=/g')

        while read -r line; do
          # skip comments
          [[ "$line" = \#* ]] && continue;
          declare -x "${line}";
        done < <(yq eval '.data' "{{.cluster_config_file}}" | sed 's/: /=/g')

        # Build the manifests in ks_path, substitute env with the variables and then apply to the cluster
        kustomize build --load-restrictor=LoadRestrictionsNone "{{.ks_path}}" \
            | envsubst \
                | kubectl delete -f -
    vars:
      cluster_secret_file: '{{.cluster_secret_file | default "./kubernetes/flux/vars/cluster-secrets.sops.yaml"}}'
      cluster_config_file: '{{.cluster_config_file | default "./kubernetes/flux/vars/cluster-settings.yaml"}}'
      ks_path: '{{ or .ks_path (fail "kustomization `ks_path` is required") }}'
