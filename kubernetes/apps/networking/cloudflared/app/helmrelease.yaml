---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cloudflared
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      cloudflared:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2025.4.2@sha256:698f5c59bf0b9ece62f8c60061004bdfcf7718fbac5d72b87e214af7b9d1d7ac
            env:
              TZ: ${TIMEZONE}
              NO_AUTOUPDATE: "true"
              TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_MANAGEMENT_DIAGNOSTICS: false
              TUNNEL_TRANSPORT_PROTOCOL: quic
              TUNNEL_POST_QUANTUM: true
              TUNNEL_ID:
                valueFrom:
                  secretKeyRef:
                    name: cloudflared-credentials
                    key: TUNNEL_ID
            args:
              - tunnel
              - --config
              - /etc/cloudflared/config/config.yaml
              - run
              - $(TUNNEL_ID)
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }

    defaultPodOptions:
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      config:
        type: configMap
        name: *app
        globalMounts:
          - path: /etc/cloudflared/config/config.yaml
            subPath: config.yaml
            readOnly: true
      creds:
        type: secret
        name: cloudflared-credentials
        globalMounts:
          - path: /etc/cloudflared/creds/credentials.json
            subPath: credentials.json
            readOnly: true
