---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
  annotations:
    metallb.universe.tf/address-pool: ingress
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 21.1.0
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
  maxHistory: 3
  install:
    timeout: 10m
    replace: true
    # crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    # crds: CreateReplace
  uninstall:
    keepHistory: false
  values:
    image:
      name: traefik
      # defaults to appVersion
      tag: ""
    deployment:
      kind: DaemonSet
      annotations:
        reloader.stakater.com/search: "true"

    installCRDs: true

    ingressClass:
      enabled: true
      isDefaultClass: true

    experimental:
      v3:
        enabled: false
      plugins:
        enabled: true
      kubernetesGateway:
        enabled: false

    ingressRoute:
      dashboard:
        enabled: false # we'll use a custom ingressRoute with basic auth instead of the default one

    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
        # ingressClass: "traefikcrd"
        # ingressClass: traefik-internal
        # labelSelector: environment=production,method=traefik
      kubernetesIngress:
        enabled: true
        # ingressClass: "traefik"
        # ingressClass: traefik-internal
        # labelSelector: environment=production,method=traefik

    logs:
      general:
        level: DEBUG
        # format: json
      access:
        enabled: true # handled in crds kustomization
        # format: json
    metrics:
      prometheus:
        entryPoint: metrics
        addEntryPointsLabels: true
        addRoutersLabels: true
        addServicesLabels: true
    # tracing: {}

    ## https://doc.traefik.io/traefik/reference/static-configuration/cli/
    globalArguments:
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
    additionalArguments:
      - "--api=true"
      # - "--api.dashboard=true"
      - "--api.debug=true"
      - "--api.insecure=true"
      - "--hostresolver=true"
      - "--serverstransport.insecureskipverify=true"
      ## add plugins
      # fix cloudflare source ips
      - "--experimental.plugins.get-real-ip.modulename=github.com/Paxxs/traefik-get-real-ip"
      - "--experimental.plugins.get-real-ip.version=v1.0.2"
    env:
      - name: TZ
        value: "${TIMEZONE}"
    # envFrom: []
    #   - configMapRef:
    #       name: config-map-name
    #   - secretRef:
    #       name: secret-name

    ports:
      traefik:
        port: 9000
        expose: true # use ingressroute
        exposedPort: 9000
      web:
        # port: 80
        expose: true
        exposedPort: 80
        redirectTo: websecure
      websecure:
        # asDefault: true
        # port: 443
        expose: true
        exposedPort: 443
        ## Trust forwarded  headers information (X-Forwarded-*) from following IPs/rances
        forwardedHeaders:
          # insecure: false
          trustedIPs:
            ## cluster ips
            - ${NET_NODE_CIDR}
            - ${NET_POD_CIDR}
            - ${NET_SVC_CIDR}
            - ${LB_GATEWAY}
            - ${LB_INGRESS}
            - ${LB_AUTH}
            # ## add non-k8s proxies, svcs, etc
        ## Enable the Proxy Protocol header parsing for the entry point
        # proxyProtocol:
        #   insecure: false
        #   trustedIPs: []
        tls:
          enabled: true
          options: "default"
      ssh:
        port: 2222
        expose: true
        exposedPort: 2222
      metrics:
        port: 9100
        expose: false
        # exposedPort: 9100

    # # https://doc.traefik.io/traefik/https/tls/#tls-options
    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
        cipherSuites:
          - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 # TLS 1.2
          - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305 # TLS 1.2
          - TLS_AES_256_GCM_SHA384 # TLS 1.3
          - TLS_CHACHA20_POLY1305_SHA256 # TLS 1.3
        curvePreferences:
          - CurveP521
          - CurveP384

    # TLS Store are created as TLSStore CRDs. This is useful if you want to set a default certificate
    # https://doc.traefik.io/traefik/https/tls/#default-certificate
    tlsStore:
      default:
        defaultCertificate:
          secretName: "${SECRET_DOMAIN/./-}-tls"

    service:
      enabled: true
      # 'single' service uses `MixedProtocolLBService` feature -- if false, creates two Service, one each for TCP+UDP
      single: true
      type: LoadBalancer
      ### pick either metallb annotation OR spec.loadBalancerIP
      annotations:
        metallb.universe.tf/loadBalancerIPs: "${LB_INGRESS}"
      spec:
        externalTrafficPolicy: Local # preserve client source IP
      #   loadBalancerIP: "${LB_INGRESS}" # metallb IP reservation for Ingress

    rbac:
      enabled: true

    resources:
      requests:
        cpu: 15m
        memory: 50M
      limits:
        memory: 105M

    tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
