---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.14.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  values:
    annotations:
      all:
        reloader.stakater.com/search: "true"

    monitoring:
      enabled: true
      # https://raw.githubusercontent.com/rook/rook/master/deploy/examples/monitoring/localrules.yaml
      createPrometheusRules: false # deploy manually with kube-prom-stack to patch

    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        host:
          name: &host "ceph.${SECRET_DOMAIN}"
          path: /
        tls:
          - hosts:
              - *host

    toolbox:
      enabled: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      resources:
        requests:
          cpu: 100m
          memory: 64M
        limits:
          memory: 128M

    # https://rook.io/docs/rook/v1.10/Storage-Configuration/Advanced/ceph-configuration/#custom-cephconf-settings
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

      [mon]
      mon_compact_on_start = true
    cephClusterSpec:
      crashCollector:
        disable: false
        daysToRetain: 30
      logCollector:
        enabled: true
        periodicity: daily # one of: hourly, daily, weekly, monthly
        maxLogSize: 500M # SUFFIX may be 'M' or 'G'. Must be at least 1M.
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        # prometheusEndpoint: http://kps-prometheus.monitoring.svc.cluster.local:9090
        prometheusEndpoint: http://thanos-query-frontend.monitoring.svc.cluster.local:10902
        prometheusEndpointSSLVerify: false
      mgr:
        modules:
          - name: rook
            enabled: true
          - name: pg_autoscaler
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      placement:
        mgr: &placement
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              operator: Exists
        mon:
          <<: *placement
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: optiplex3
            devices:
              - name: "/dev/disk/by-id/ata-SATA_SSD_22010312000052"
          - name: optiplex4
            devices:
              - name: "/dev/disk/by-id/ata-SATA_SSD_22010312000015"
          - name: optiplex5
            devices:
              - name: "/dev/disk/by-id/ata-SATA_SSD_22010312000028"
      resources:
        mgr:
          requests:
            cpu: 125m
            memory: 512Mi
          limits:
            memory: 1Gi
        mon:
          requests:
            cpu: 125m
            memory: 512Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            memory: 2Gi
        prepareosd:
          requests:
            cpu: 250m
            memory: 50M
          # limits: It is not recommended to set limits on the OSD prepare job
          #         since it's a one-time burst for memory that must be allowed to
          #         complete without an OOM kill...
          #         for larger devices 2Gi may be required
          limits:
            memory: 2Gi # set arbitrarily large
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 94M
          limits:
            memory: 256M
        crashcollector:
          requests:
            cpu: 15m
            memory: 64M
          limits:
            memory: 64M
        logcollector:
          requests:
            cpu: 100m
            memory: 100M
          limits:
            memory: 1Gi
        cleanup:
          requests:
            cpu: 500m
            memory: 100M
          limits:
            memory: 1G

    # https://github.com/rook/rook/blob/HEAD/deploy/examples/csi/rbd/storageclass.yaml
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            pg_num: "128" # create the pool with a pre-configured placement group number
            pgp_num: "128" # this should at least match `pg_num` so that all PGs are used
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-block
      isDefault: true
      deletionPolicy: Delete

    # https://github.com/rook/rook/blob/HEAD/deploy/examples/filesystem.yaml
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                cpu: 150m
                memory: 4Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-fs
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
            pg_num: "128" # create the pool with a pre-configured placement group number
            pgp_num: "128" # this should at least match `pg_num` so that all PGs are used
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-fs
      isDefault: false
      deletionPolicy: Delete

    # https://github.com/rook/rook/blob/HEAD/deploy/examples/object.yaml
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                memory: 2Gi
            instances: 2
            priorityClassName: system-cluster-critical
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
            pg_num: "128" # create the pool with a pre-configured placement group number
            pgp_num: "128" # this should at least match `pg_num` so that all PGs are used
        # ingress:
        #   enabled: true
        #   ingressClassName: internal
        #   host:
        #     name: rgw.${SECRET_DOMAIN}
        #     path: /

  # # TODO: update CephCluster CR with prometheus and alertmanager endpoints?
  # # prometheusEndpoint: http://kps-prometheus.monitoring.svc.cluster.local:9090
  # # prometheusEndpointSSLVerify: false
  # postRenderers:
  #   - kustomize:
  #       patches:
  #         - target:
  #             version: v1
  #             kind: ConfigMap
  #             labelSelector: grafana_dashboard in (1)
  #           patch: |-
  #             apiVersion: v1
  #             kind: ConfigMap
  #             metadata:
  #               name: not-used
  #               namespace: not-used
  #               annotations:
  #                 grafana_folder: Kubernetes
  #   - kustomize:
  #       patchesStrategicMerge:
  #         - apiVersion: apps/v1
  #           kind: Deployment
  #           metadata:
  #             name: volsync
  #           spec:
  #             template:
  #               spec:
  #                 containers:
  #                   - name: manager
  #                     volumeMounts:
  #                       - name: tz-config
  #                         mountPath: /etc/localtime
  #                 volumes:
  #                   - name: tz-config
  #                     hostPath:
  #                       path: /usr/share/zoneinfo/America/New_York
  #                       type: File
