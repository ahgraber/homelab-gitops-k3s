---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: rook-ceph-operator
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph
      version: v1.14.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
    pspEnable: false
    monitoring:
      enabled: true

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        memory: 256Mi

    nodeSelector:
      node-role.kubernetes.io/control-plane: "true"
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists

    csi:
      enableLiveness: true
      serviceMonitor:
        enabled: true
      # enableRbdDriver: true
      # enableCephfsDriver: true
      # enableGrpcMetrics: false
      # enableCSIHostNetwork: true
      # enableCephfsSnapshotter: true
      # enableRBDSnapshotter: true
      # enablePluginSelinuxHostMount: false
      # enableCSIEncryption: false

      kubeletDirPath: /var/lib/kubelet

      # Set provisonerTolerations and provisionerNodeAffinity for provisioner pod.
      # The CSI provisioner would be best to start on the same nodes as other ceph daemons.
      provisionerTolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      # provisionerNodeAffinity: node-role.kubernetes.io/control-plane=true
      # Set pluginTolerations and pluginNodeAffinity for plugin daemonset pods.
      # The CSI plugins need to be started on all the nodes where the clients need to mount the storage.
      pluginTolerations:
        - effect: "NoExecute"
          operator: "Exists"
        - effect: "NoSchedule"
          operator: "Exists"
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      # pluginNodeAffinity: node-role.kubernetes.io/control-plane=true

    discover:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists

    disableAdmissionController: true
    # admissionController:
    #   tolerations:
    #     - effect: NoSchedule
    #       key: node-role.kubernetes.io/control-plane
    #       operator: Exists
    #   nodeAffinity: node-role.kubernetes.io/control-plane=true
