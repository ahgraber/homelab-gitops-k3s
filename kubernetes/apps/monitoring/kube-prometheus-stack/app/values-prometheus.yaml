---
apiVersion: v1
kind: ConfigMap
metadata:
  name: values-prometheus
  namespace: monitoring
  annotations:
    reloader.stakater.com/match: "true"
data:
  values.yaml: |
    ## Deploy a Prometheus instance
    prometheus:
      enabled: true
      nameOverride: prometheus

      ingress:
        main:
          enabled: true
          ingressClassName: nginx
          annotations:
            nginx.ingress.kubernetes.io/whitelist-source-range: |
              10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hosts:
            - host: &host "prometheus.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host

      ## Settings affecting prometheusSpec
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheusspec
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: __replica__

        enableAdminAPI: true
        logLevel: info

        ## External URL at which Prometheus will be reachable.
        externalLabels:
          cluster: homelab-gitops-k3s
        externalUrl: "https://prometheus.${SECRET_DOMAIN}"

        ## If true, a nil or {} value for prometheus.prometheusSpec.___Selector will cause the
        ## prometheus resource to be created with selectors based on values in the helm deployment,
        ## which will also match the Prometheus___resources created
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false

        ## retention & compression
        retention: 3d
        retentionSize: 8GiB
        walCompression: true

        ## Prometheus StorageSpec for persistent data
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Gi

        ## Resource limits & requests
        resources:
          requests:
            cpu: 763m
            memory: 7Gi
          limits:
            memory: 7Gi

        # tolerations: []
        # nodeSelector: {}
        podAntiAffinity: hard
        podAntiAffinityTopologyKey: kubernetes.io/hostname

        # ## AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations.
        # ## AdditionalScrapeConfigs can be defined as a list or as a templated string.
        # additionalScrapeConfigs:
        #   - job_name: node-exporter
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - opnsense.${SECRET_DOMAIN}:9100
        #   # - job_name: graphite-exporter # truenas
        #   #   scrape_interval: 1m
        #   #   metrics_path: /metrics
        #   #   static_configs:
        #   #     - targets:
        #   #         - graphite-exporter.monitoring.svc.cluster.local:9108

        ## use if keys are present INSTEAD of additionalScrapeConfigs
        additionalScrapeConfigsSecret:
          enabled: true
          name: prometheus-additional-scrape-configs
          key: additionalScrapeConfigs

      #   thanos:
      #     image: quay.io/thanos/thanos:v0.29.0
      #     # renovate: datasource=docker depName=quay.io/thanos/thanos
      #     version: "v0.31.0"
      #     objectStorageConfig:
      #       name: thanos-objstore-secret
      #       key: objstore.yml

      # thanosService:
      #   enabled: true
      # thanosServiceMonitor:
      #   enabled: true
      # thanosServiceExternal:
      #     enabled: true
      # thanosIngress:
      #   enabled: false
