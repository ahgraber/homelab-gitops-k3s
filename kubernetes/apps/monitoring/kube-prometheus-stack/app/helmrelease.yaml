---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.4.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    ## ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    fullnameOverride: kps
    cleanPrometheusOperatorObjectNames: true

    crds:
      enabled: true

    alertmanager:
      enabled: true
      fullnameOverride: alertmanager
      alertmanagerSpec:
        retention: 72h
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi
      # config:  # see configmap
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - &host "alertmanager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host

    grafana:
      enabled: false # manage by itself
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            global:
              enabled: true

    # coreDns:
    #   enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 10.2.118.23
        - 10.2.118.24
        - 10.2.118.25
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"
    kubeEtcd:
      enabled: true
      endpoints: *cp
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      releaseLabel: true # enable servicemonitor scraping with kube-prometheus-stack out of the box
      metricLabelsAllowlist:
        - "deployments=[*]"
        - "persistentvolumeclaims=[*]"
        - "pods=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              regex: ^(.*)$
              replacement: $1
              targetLabel: kubernetes_node

    nodeExporter:
      enabled: false

    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M
      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 5m
            memory: 32M
          limits:
            memory: 32M

    prometheus:
      enabled: true
      fullNameOverride: prometheus
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - &host "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: __replica__
        enableAdminAPI: true
        externalLabels:
          cluster: home-kubernetes
        additionalScrapeConfigsSecret:
          enabled: true
          name: prometheus-additional-scrape-configs
          key: additionalScrapeConfigs

        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false

        resources:
          requests:
            cpu: 763m
            memory: 7Gi
          limits:
            memory: 7Gi

        retention: 3d
        retentionSize: 8GiB
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Gi

  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: ConfigMap
              labelSelector: grafana_dashboard in (1)
            patch: |-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: not-used
                namespace: not-used
                annotations:
                  grafana_folder: Kubernetes
  # ### exclude ceph-fs storageclass from inode calculations
  # ### CephFS doesn't have the same notion of inodes as other fs do because it expands them dynamically.
  # ### It reports a non-valid value to the check (0), causing it to trigger that alert
  # ### https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/templates/prometheus/rules-1.14 # yamllint disable-line rule:line-length
  #   - kustomize:
  #       patches:
  #         - target:
  #             group: monitoring.coreos.com
  #             version: v1
  #             kind: PrometheusRule
  #             name: kps-kubernetes-storage
  #             namespace: monitoring
  #           patch: |
  #             # KubePersistentVolumeInodesFillingUp | critical
  #             - op: replace
  #               path: /spec/groups/0/rules/2/expr
  #               value: |
  #                 (
  #                   kubelet_volume_stats_inodes_free{job="kubelet", namespace=~".*", metrics_path="/metrics"}
  #                   /
  #                   kubelet_volume_stats_inodes{job="kubelet", namespace=~".*", metrics_path="/metrics"}
  #                 ) < 0.03
  #                 and
  #                 kubelet_volume_stats_inodes_used{job="kubelet", namespace=~".*", metrics_path="/metrics"} > 0

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_access_mode{access_mode="ReadOnlyMany"}== 1

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}== 1

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_info{storageclass=~"ceph.*"} == 1

  #             # KubePersistentVolumeInodesFillingUp | warning
  #             - op: replace
  #               path: /spec/groups/0/rules/3/expr
  #               value: |
  #                 (
  #                   kubelet_volume_stats_inodes_free{job="kubelet", namespace=~".*", metrics_path="/metrics"}
  #                   /
  #                   kubelet_volume_stats_inodes{job="kubelet", namespace=~".*", metrics_path="/metrics"}
  #                 ) < 0.15
  #                 and
  #                 kubelet_volume_stats_inodes_used{job="kubelet", namespace=~".*", metrics_path="/metrics"} > 0
  #                 and
  #                 predict_linear(
  #                   kubelet_volume_stats_inodes_free{job="kubelet", namespace=~".*", metrics_path="/metrics"}[6h],
  #                   4 * 24 * 3600
  #                 ) < 0

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_access_mode{access_mode="ReadOnlyMany"}== 1

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}== 1

  #                 unless on(namespace, persistentvolumeclaim)
  #                 kube_persistentvolumeclaim_info{storageclass=~"ceph.*"} == 1
