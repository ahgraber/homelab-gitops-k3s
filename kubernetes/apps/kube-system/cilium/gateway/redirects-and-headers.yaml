---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/httproute_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: httpsredirect
  annotations:
    external-dns.alpha.kubernetes.io/controller: none
spec:
  parentRefs:
    - name: internal
      namespace: kube-system
      kind: Gateway
      sectionName: http
    - name: external
      namespace: kube-system
      kind: Gateway
      sectionName: http
  rules:
    - filters:
        - requestRedirect:
            scheme: https
            statusCode: 301
          type: RequestRedirect
    - matches:
        - path:
            type: PathPrefix
            value: /
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/httproute_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: default-headers
  namespace: networking
spec:
  parentRefs:
    - name: internal
      namespace: kube-system
      kind: Gateway
    - name: external
      namespace: kube-system
      kind: Gateway
  rules:
    - filters:
        - type: ResponseHeaderModifier
          responseHeaderModifier:
            add:
              - name: X-Content-Type-Options
                value: nosniff
              - name: X-Frame-Options
                value: SAMEORIGIN
              - name: X-XSS-Protection
                value: "1; mode=block"
              - name: Strict-Transport-Security
                value: "max-age=31536000; includeSubDomains; preload"
              - name: Content-Security-Policy
                value: "default-src 'self'; script-src 'self'"
    - matches:
        - path:
            type: PathPrefix
            value: /
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/httproute_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: extended-headers
  namespace: networking
spec:
  parentRefs:
    - name: external
      namespace: kube-system
      kind: Gateway
  rules:
    - filters:
        - type: ResponseHeaderModifier
          responseHeaderModifier:
            add:
              - name: Permissions-Policy
                value: "accelerometer=(),autoplay=(),camera=(),display-capture=(),document-domain=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),publickey-credentials-get=(),screen-wake-lock=(),sync-xhr=(self),usb=(),web-share=(),xr-spatial-tracking=()"
              - name: Referrer-Policy
                value: strict-origin-when-cross-origin
              - name: Cache-Control
                value: "no-store, no-cache, must-revalidate"
    - matches:
        - path:
            type: PathPrefix
            value: /
