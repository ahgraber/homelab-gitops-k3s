---
# yaml-language-server: $schema=https://www.authelia.com/schemas/latest/json-schema/configuration.json
theme: auto

default_2fa_method: "totp"

server:
  disable_healthcheck: true
log:
  level: debug
telemetry:
  metrics:
    enabled: true

totp:
  disable: false
  issuer: ${SECRET_DOMAIN}
webauthn:
  disable: true
duo_api:
  disable: true

identity_validation:
  reset_password:
    jwt_lifespan: "10 minutes"
    # jwt_secret: "" # Load from AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET

# definitions:
#   network:
#     internal:
#       - "10.0.0.0/8"
#       # - "172.16.0.0/12"
#       - "192.168.0.0/16"

authentication_backend:
  password_reset:
    disable: false
  refresh_interval: 1m
  ldap:
    implementation: custom
    address: ldap://lldap.security.svc.cluster.local:3890
    user: uid=authelia,ou=people,dc=home,dc=arpa
    # password: "" # Load from AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD
    timeout: 5s
    start_tls: false
    base_dn: dc=home,dc=arpa
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    group_search_mode: filter
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      group_name: cn
      member_of: memberOf

access_control:
  ## Default policy can be: 'bypass', 'one_factor', 'two_factor', 'deny'
  ## Default policy is applied to any resource if there is no policy specified.
  default_policy: deny
  networks:
    - name: internal
      networks:
        - "10.0.0.0/8"
        # - "172.16.0.0/12"
        - "192.168.0.0/16"
  rules:
    # bypass Authelia WAN + LAN
    - domain:
        - "auth.${SECRET_DOMAIN}"
      policy: bypass
    # One factor auth for LAN
    - domain:
        - "${SECRET_DOMAIN}"
        - "*.${SECRET_DOMAIN}"
      policy: one_factor
      # subject: [group:admins, group:users]
      networks:
        - "internal"
    # Two factor auth for WAN
    - domain:
        - "${SECRET_DOMAIN}"
        - "*.${SECRET_DOMAIN}"
      policy: two_factor
    # # Deny public resources
    # - domain: ["navidrome.${SECRET_DOMAIN}"]
    #   resources: [^/metrics.*$]
    #   policy: deny
    # # This just reduces logging noise in authelia
    # - domain:
    #     - whoami.${CLUSTER_DOMAIN}
    #   resources:
    #     - ^/health$
    #     - ^/health/
    #   policy: bypass

session:
  secret: '{{ secret "/config/secrets/AUTHELIA_SESSION_SECRET" }}'
  cookies:
    - name: "${SECRET_DOMAIN}_session"
      domain: "${SECRET_DOMAIN}"
      authelia_url: "https://auth.${SECRET_DOMAIN}"
      # default_redirection_url: https://${SECRET_DOMAIN}
  name: authelia_session
  same_site: lax
  inactivity: 10m
  expiration: 1h
  remember_me: 1M
  # redis:
  #   host: dragonfly.database.svc.cluster.local.
  #   port: 6379
  #   database_index: 2
regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

storage:
  local:
    path: /data/db.sqlite3
  encryption_key: '{{ secret "/config/secrets/AUTHELIA_STORAGE_ENCRYPTION_KEY" }}'

notifier:
  disable_startup_check: true
  smtp:
    address: '{{ secret "/config/secrets/SMTP_ADDRESS" }}'
    username: '{{ secret "/config/secrets/SMTP_USERNAME" }}'
    password: '{{ secret "/config/secrets/SMTP_PASSWORD" }}'
    sender: '{{ secret "/config/secrets/SMTP_SENDER" }}'
    disable_require_tls: false
    disable_starttls: false

identity_providers:
  oidc:
    # hmac_secret: # Load From AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET
    jwks:
      - key: |
          {{ secret "/config/secrets/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
    enable_client_debug_messages: true
    cors:
      endpoints: [userinfo, authorization, token, revocation, introspection]
      allowed_origins_from_client_redirect_uris: true
    clients:
      ## ref: https://www.authelia.com/configuration/identity-providers/openid-connect/clients/
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-access/configure-authentication/generic-oauth/
      - client_id: grafana
        client_name: Grafana
        client_secret: '{{ secret "/config/secrets/GRAFANA_OAUTH_CLIENT_DIGEST" }}'
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris:
          - "https://grafana.${SECRET_DOMAIN}/login/generic_oauth"
      - client_name: Mealie
        client_id: mealie
        client_secret: '{{ secret "/config/secrets/MEALIE_OAUTH_CLIENT_DIGEST" }}'
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris:
          - https://mealie.${SECRET_DOMAIN}/login
        scopes: [openid, email, groups, profile]
        response_types: [code]
        grant_types: [authorization_code]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # - client_id: miniflux
      #   client_name: Miniflux
      #   client_secret: '{{ secret "/config/secrets/MINIFLUX_OAUTH_CLIENT_DIGEST" }}'
      #   authorization_policy: two_factor
      #   pre_configured_consent_duration: 1y
      #   scopes: ["openid", "profile", "groups", "email"]
      #   redirect_uris: ["https://miniflux.${SECRET_DOMAIN}/oauth2/oidc/callback"]
      #   userinfo_signed_response_alg: none
      - client_id: whoami
        client_name: WhoAmI
        client_secret: '{{ secret "/config/secrets/WHOAMI_OAUTH_CLIENT_DIGEST" }}'
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris:
          - "https://whoami.${SECRET_DOMAIN}/oauth2/callback"
        userinfo_signed_response_alg: none
