---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  timeout: 5m
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      lldap:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/lldap/lldap
              tag: stable-alpine-rootless
            env:
              TZ: ${TIMEZONE}
              LLDAP_HTTP_PORT: &port 8080
              LLDAP_HTTP_URL: https://lldap.${SECRET_DOMAIN}
              LLDAP_LDAP_PORT: &ldapPort 5389
              LLDAP_LDAP_BASE_DN: dc=home,dc=arpa
              LLDAP_DATABASE_URL: sqlite:///data/users.db?mode=rwc
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities:
                drop: ["ALL"]

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          ldap:
            port: *ldapPort
    route:
      app:
        hostnames:
          - &host lldap.${SECRET_DOMAIN}
        parentRefs:
          - name: envoy-internal
            namespace: networking
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - identifier: app
                port: *port

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /data
