---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app docat
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      docat:
        strategy: Recreate
        containers:
          app:
            image:
              # renovate: datasource=docker image=ghcr.io/docat-org/docat
              repository: ghcr.io/docat-org/docat
              tag: 47cc0cc96bf20886ec0a260e03fa0ee097e46810
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 80
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 25m
                memory: 105M
              # limits:
              #   memory: 105M
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: [ALL] }

    defaultPodOptions:
      securityContext:
        # runAsNonRoot: true
        # runAsUser: 65534
        # runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host docs.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /var/docat
