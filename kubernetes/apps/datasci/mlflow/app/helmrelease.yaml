---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mlflow
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    # defaultPodOptions:
    #   securityContext:
    #     runAsGroup: 65534
    #     runAsUser: 65534
    #     runAsNonRoot: true
    #     seccompProfile:
    #       type: RuntimeDefault

    controllers:
      mlflow:
        annotations:
          reloader.stakater.com/search: "true"
        strategy: Recreate

        initContainers:
          db-upgrade:
            image:
              repository: ghcr.io/ninerealmlabs/mlflow-server
              tag: 2.20.1@sha256:e5891081fe8f7a7eb3c984070291045425c3d8cb57a48dcd077857eed8448321
            env:
              MLFLOW_BACKEND_STORE_URI:
                valueFrom:
                  secretKeyRef:
                    name: &db_secret database-mlflow
                    key: POSTGRES_URL
            # double "$$" escape flux substitutions
            command: [/bin/bash, -c, mlflow db upgrade "$$MLFLOW_BACKEND_STORE_URI"]
        containers:
          app:
            image:
              # renovate: datasource=docker image=ghcr.io/...
              repository: ghcr.io/ninerealmlabs/mlflow-server
              tag: 2.20.1@sha256:e5891081fe8f7a7eb3c984070291045425c3d8cb57a48dcd077857eed8448321
            # -- Override the command(s) for the default container
            command:
              - "/bin/bash"
              - "-c"
              - >
                mlflow server
                --host=$MLFLOW_HOST
                --port=$MLFLOW_PORT
                --backend-store-uri=$POSTGRES_URL
                --serve-artifacts
                --artifacts-destination=$S3_BUCKET
            env:
              MLFLOW_HOST: 0.0.0.0
              MLFLOW_PORT: &port 5000
              POSTGRES_URL:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: POSTGRES_URL
              S3_BUCKET: s3://mlflow/
              # MLFLOW_S3_ENDPOINT_URL: # http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc/
              #   valueFrom:
              #     secretKeyRef:
              #       name: mlflow-s3
              #       key: MLFLOW_S3_ENDPOINT_URL
              # AWS_ACCESS_KEY_ID:
              #   valueFrom:
              #     secretKeyRef:
              #       name: mlflow-s3
              #       # name: mlflow-bucket
              #       key: AWS_ACCESS_KEY_ID
              # AWS_SECRET_ACCESS_KEY:
              #   valueFrom:
              #     secretKeyRef:
              #       name: mlflow-s3
              #       # name: mlflow-bucket
              #       key: AWS_SECRET_ACCESS_KEY
              # MLFLOW_S3_IGNORE_TLS: true
              # MLFLOW_SERVE_ARTIFACTS: true
              # MLFLOW_ARTIFACTS_DESTINATION: s3://mlflow/
              # MLFLOW_DEFAULT_ARTIFACT_ROOT: s3:https://${SECRET_S3_ENDPOINT}/mlflow # s3://mlflow/
              # To connect the MLflow AI Gateway with the MLflow Tracking Server
              MLFLOW_DEPLOYMENTS_TARGET: http://mlflow-gateway.datasci.svc.cluster.local:5001
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: mlflow-s3
                  # contains AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
                  httpGet:
                    path: /health
                    port: *port
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 0
                  timeoutSeconds: 1
                  periodSeconds: 5
                  failureThreshold: 30
                  httpGet:
                    path: /health
                    port: *port
            resources:
              requests:
                cpu: 25m
                memory: 105M
              # limits:
              #   memory: 105M
      gateway:
        annotations:
          reloader.stakater.com/search: "true"
        strategy: Recreate
        containers:
          app:
            image:
              # renovate: datasource=docker image=ghcr.io/...
              repository: ghcr.io/ninerealmlabs/mlflow-server
              tag: 2.20.1@sha256:e5891081fe8f7a7eb3c984070291045425c3d8cb57a48dcd077857eed8448321
            command: [mlflow, gateway, start]
            args:
              - "--host=0.0.0.0"
              - "--port=5001"
              # - "--config-path=/config/config.yaml"
            env:
              MLFLOW_HOST: 0.0.0.0
              MLFLOW_PORT: &gport 5001
              MLFLOW_GATEWAY_CONFIG: "/config/config.yaml"
              TZ: ${TIMEZONE}
            probes:
              liveness: &gprobes
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
                  httpGet:
                    path: /health
                    port: *gport
              readiness: *gprobes
              startup:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 0
                  timeoutSeconds: 1
                  periodSeconds: 5
                  failureThreshold: 30
                  httpGet:
                    path: /health
                    port: *gport
            resources:
              requests:
                cpu: 25m
                memory: 105M
              # limits:

    service:
      mlflow:
        controller: mlflow
        ports:
          http:
            port: *port
      gateway:
        controller: gateway
        ports:
          http:
            port: *gport
    ingress:
      main:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host mlflow.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: mlflow
                  port: http
        tls:
          - hosts:
              - *host
      gateway:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &gateway mlflow-gateway.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: gateway
                  port: http
        tls:
          - hosts:
              - *gateway
    persistence:
      # data:
      #   enabled: true
      #   type: persistentVolumeClaim
      #   existingClaim: *app
      #   # globalMounts:
      #   #   - path: /mlflow # defaults to persistence.key
      #   advancedMounts:
      #     mlflow:
      #       app:
      #         - path: /mlflow
      config:
        # type: configMap
        # name: mlflow-gateway-config
        # advancedMounts: # only attach to gateway container
        #   gateway:
        #     app:
        #       - path: /config/config.yaml
        #         readOnly: false
        #         subPath: config.yaml
        type: secret
        name: mlflow-gateway
        advancedMounts: # only attach to gateway container
          gateway:
            app:
              - path: /config/config.yaml
                readOnly: false
                subPath: config.yaml
