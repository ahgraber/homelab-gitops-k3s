---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app mealie
spec:
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    defaultPodOptions:
      securityContext:
        # runAsGroup: 65534
        # runAsUser: 65534
        # runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
    controllers:
      mealie:
        annotations:
          reloader.stakater.com/search: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/mealie-recipes/mealie
              tag: v1.4.0
            env:
              TZ: ${TIMEZONE}
              ALLOW_SIGNUP: "false"
              BASE_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}
              # database settings
              DB_ENGINE: postgres
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: &db_secret database-mealie
                    key: DATABASE_NAME
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: LOGIN
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: PASSWORD
              POSTGRES_SERVER:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: HOST
              POSTGRES_PORT: 5432
            envFrom:
              - secretRef:
                  name: *app

            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 512M
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }

    service:
      app:
        controller: *app
        ports:
          http:
            port: 9000

    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /app/data
