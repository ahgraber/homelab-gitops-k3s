---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mealie
spec:
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      mealie:
        annotations:
          reloader.stakater.com/search: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/mealie-recipes/mealie
              tag: v2.3.0@sha256:562ba8b1c98fbfa98a019ab6e0e45c88dae9a2e9a858ec4eac8f6321e46e9227
            env:
              TZ: ${TIMEZONE}
              ALLOW_SIGNUP: "false"
              BASE_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}
              # database settings
              DB_ENGINE: postgres
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: &db_secret database-mealie
                    key: DATABASE_NAME
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: LOGIN
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: PASSWORD
              POSTGRES_SERVER:
                valueFrom:
                  secretKeyRef:
                    name: *db_secret
                    key: HOST
              POSTGRES_PORT: 5432
            envFrom:
              - secretRef:
                  name: *app

            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 512M
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   capabilities: { drop: ["ALL"] }

    # defaultPodOptions:
    #   securityContext:
    #     # runAsGroup: 65534
    #     # runAsUser: 65534
    #     # runAsNonRoot: true
    #     seccompProfile:
    #       type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: 9000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            more_set_headers "Content-Security-Policy: default-src 'self' ninerealmlabs.com *.ninerealmlabs.com;connect-src 'self';img-src *;font-src 'self' cdn.jsdelivr.net;frame-ancestors 'self';object-src 'none';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline' cdn.jsdelivr.net";
          # nginx.ingress.kubernetes.io/whitelist-source-range: |
          #   10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /app/data
