---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: &name postgres
  namespace: &namespace default
  annotations:
    kyverno.io/ignore: "true"
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:14.5
  instances: 3
  primaryUpdateStrategy: unsupervised

  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: 256MB
      # pg_stat_statements.max: "10000"
      # pg_stat_statements.track: all
      # auto_explain.log_min_duration: "10s"
    # pg_hba:
    #   - host all all 10.244.0.0/16 md5

  superuserSecret:
    name: postgres-superuser-secret

  storage:
    size: 15Gi
    storageClass: local-path

  bootstrap:
    # ## for initial setup
    # initdb:
    #   # set up 'default' db/owner
    #   database: default
    #   owner: default
    #   # secret:
    #   #   name: <app>-user-secret
    ## Alternative bootstrap method: start from a backup
    recovery:
      source: &s3-backup postgres-v2 # next time it will be postgres-v3

  # externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *s3-backup
      barmanObjectStore:
        endpointURL: https://${SECRET_S3_ENDPOINT}
        destinationPath: s3://postgres/
        s3Credentials:
          accessKeyId:
            name: postgres-s3-secret
            key: S3_ACCESS_KEY
          secretAccessKey:
            name: postgres-s3-secret
            key: S3_SECRET_KEY
        wal:
          compression: bzip2
          maxParallel: 8

  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      serverName: postgres-v3 # next time it will be postgres-v4
      endpointURL: https://${SECRET_S3_ENDPOINT}
      destinationPath: s3://postgres/
      s3Credentials:
        accessKeyId:
          name: postgres-s3-secret
          key: S3_ACCESS_KEY
        secretAccessKey:
          name: postgres-s3-secret
          key: S3_SECRET_KEY
      wal:
        compression: bzip2
        maxParallel: 8
      data:
        compression: bzip2
        immediateCheckpoint: false
        jobs: 4

  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 1Gi

  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname

  monitoring:
    enablePodMonitor: true

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false
