---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app readeck
spec:
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      readeck:
        strategy: Recreate
        annotations:
          reloader.stakater.com/search: "true"
        containers:
          app:
            image:
              repository: codeberg.org/readeck/readeck
              tag: 0.16.0@sha256:3d15c07307f3e3260b69e85feab761fe0a65fab035a0fd218e1d5c9201805d69
            env:
              TZ: ${TIMEZONE}
              READECK_LOG_LEVEL: info
              READECK_DEV_MODE: "false"
              READECK_SERVER_HOST: 0.0.0.0
              READECK_SERVER_PORT: &port "8080"
              READECK_SERVER_PREFIX: /
              READECK_USE_X_FORWARDED: "true"
              READECK_ALLOWED_HOSTS: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
              # READECK_DATABASE_SOURCE: "sqlite3:/readeck/data/readeck.sqlite"
              #   valueFrom:
              #     secretKeyRef:
              #       name: &db_secret database-readeck
              #       key: POSTGRES_URL
            # envFrom:
            #   - secretRef:
            #       name: *app
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 12m
                memory: 128M
              limits:
                memory: 1000M
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities:
            #     drop: ["ALL"]
            #     # add: ["CHOWN"]
    # defaultPodOptions:
    #   securityContext:
    #     # persist permissions issues? https://github.com/sissbruecker/linkding/issues/145
    #     runAsGroup: 33
    #     runAsUser: 33
    #     runAsNonRoot: true
    #     seccompProfile:
    #       type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data: # favicons only; no need to back up
        existingClaim: *app
        globalMounts:
          - path: /readeck
