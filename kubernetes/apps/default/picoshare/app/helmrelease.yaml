---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app picoshare
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 15m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  timeout: 5m
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      picoshare:
        annotations:
          secret.reloader.stakater.com/reload: *app
        strategy: Recreate
        containers:
          app:
            image:
              # https://github.com/mtlynch/picoshare
              repository: docker.io/mtlynch/picoshare
              tag: 1.5.1@sha256:880f8dad37fe68f6d34920c6edd4675b4dd3d5122c548e1d17d793b2f2ec939d
            env:
              TZ: ${TIMEZONE}
              PORT: &port 3001
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        # runAsGroup: 65534
        # runAsUser: 65534
        # runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - share.${SECRET_DOMAIN}
        # annotations:
        #   external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        parentRefs:
          - name: envoy-external
            namespace: networking
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data
            subPath: picoshare
