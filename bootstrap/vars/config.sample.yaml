---
#
# Bootstrap configuration - config.yaml is gitignored
#

# Github username (e.g. onedr0p)
bootstrap_github_username:
# Github repository (e.g. flux-cluster-template)
bootstrap_github_repository_name:
# Github repository branch (e.g. main)
bootstrap_github_repository_branch: main
# Age Public Key (e.g. age15uzrw396e67z9wdzsxzdk7ka0g2gr3l460e0slaea563zll3hdfqwqxdta)
bootstrap_age_public_key:
# Choose your timezone (e.g. America/New_York)
bootstrap_timezone: Etc/UTC
# Email you want to be associated with the ACME account (used for TLS certificates via letsencrypt.org)
bootstrap_acme_email:
# Use the ACME production env when requesting the wildcard certificate,
# the default here is `false` which means ACME staging env will be used instead.
# This is to prevent being rate-limited. Update this option to `true` when you
# have verified the staging certificate works and then re-run `task bootstrap:render`
# and push your changes to Github.
bootstrap_acme_production_enabled: false

# Flux github webhook token (openssl rand -hex 12)
bootstrap_flux_github_webhook_token:

# Cloudflare domain
bootstrap_cloudflare_domain:
# Cloudflare API Token (not API Key)
bootstrap_cloudflare_token:
# Cloudflared Account Tag (cat ~/.cloudflared/*.json | jq -r .AccountTag)
bootstrap_cloudflare_account_tag:
# Cloudflared Tunnel Secret (cat ~/.cloudflared/*.json | jq -r .TunnelSecret)
bootstrap_cloudflare_tunnel_secret:
# Cloudflared Tunnel ID (cat ~/.cloudflared/*.json | jq -r .TunnelID)
bootstrap_cloudflare_tunnel_id:

# CIDR your nodes are on (e.g. 192.168.1.0/24)
bootstrap_node_cidr:
# The IP address to use with kube-vip, choose an available IP in your nodes network that is not being used
bootstrap_kube_vip_addr:
# The Load balancer IP for k8s_gateway, choose an available IP in your nodes network that is not being used
bootstrap_k8s_gateway_addr:
# The Load balancer IP for internal ingress, choose an available IP in your nodes network that is not being used
bootstrap_internal_ingress_addr:
# The Load balancer IP for external ingress, choose an available IP in your nodes network that is not being used
bootstrap_external_ingress_addr:

# Keep the next three options default unless you know what you are doing
# (Advanced) Enable ipv6
bootstrap_ipv6_enabled: false
# (Advanced) For ipv6 use format 10.42.0.0/16,fd78:c889:47fb:10::/60
# /60 IPv6 block is enough for 16 nodes
bootstrap_cluster_cidr: 10.42.0.0/16
# (Advanced) For ipv6 use format 10.43.0.0/16,fd78:c889:47fb:e0::/112
bootstrap_service_cidr: 10.43.0.0/16

# (Advanced) Path for local-path-provisioner to use for storage on ALL nodes
# If changing this value to anything other than the default
# make sure the path exists and is owned by root:root with 701 permissions
bootstrap_local_path_provisioner_path: /var/lib/rancher/k3s/storage

# Node information
bootstrap_nodes:
  # Use only 1, 3 or more odd controller nodes, recommended is 3
  controller:
    []
    # - name:     # name of the controller node (must match [a-z0-9-]+)
    #   address:  # ip address of the controller node
    #   username: # ssh username of the controller node
    #   password: # password of ssh username for the controller node
    #   # external_address: # Only use when SSH is not reachable on the IP specified in 'address' field
    # ...
  worker:
    [] # set to [] or omit if no workers are needed
    # - name:     # name of the worker node (must match [a-z0-9-]+)
    #   address:  # ip address of the worker node
    #   username: # ssh username of the worker node
    #   password: # password of ssh username for the worker node
    #   # external_address: # Only use when SSH is not reachable on the IP specified in 'address' field
    # ...
